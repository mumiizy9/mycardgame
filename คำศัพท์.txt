‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ 100% ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏Ç‡∏±‡∏î‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ‡∏≠‡∏µ‡∏õ‡∏¥‡∏Å‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô, ‡∏´‡∏°‡∏ß‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ,‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö autoBattle (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏¥‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏≠‡∏Å) ‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÇ‡∏ó‡∏ô‡∏°‡∏∑‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ó‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤
‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏•‡∏á‡∏°‡∏≤‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÜ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏ô‡∏õ‡∏¥‡∏î‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ
‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ô html ‡πÇ‡∏î‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°‡∏ß‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô 4 ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô ‡πÅ‡∏•‡∏∞‡∏ù‡∏±‡πà‡∏á‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå 4 ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡∏°‡∏≠‡∏µ‡∏õ‡∏¥‡∏Å‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏î‡πÉ‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏´‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‡∏°‡∏µ‡πÅ‡∏ñ‡∏ö‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡∏≠‡πÑ‡∏£ ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏•‡∏≠‡∏î‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÑ‡∏´‡∏•‡∏à‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏•‡∏≠‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏à‡∏∞‡∏ß‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡∏ï‡∏≠‡∏ô‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏õ‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏Å‡∏°‡∏¢‡∏π‡∏Å‡∏¥‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏∞‡∏ï‡∏µ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÉ‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÉ‡∏ö‡∏ó‡∏µ‡πà‡πÇ‡∏à‡∏°‡∏ï‡∏µ
‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏ö‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏à‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏à‡∏∞‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå png ‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏´‡∏≤‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏û‡∏¥‡πà‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πä‡∏î‡∏à‡∏ö‡πÉ‡∏ô‡∏ó‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡πÑ‡∏°‡πà‡∏ß‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
‡∏´‡∏≤‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô 2.1, 2.2, 2.3 ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏±‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏Ç‡∏≠‡∏ó‡∏∏‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏¢‡∏Å‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ö‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏ö‡∏ô github ‡∏ã‡∏∂‡πà‡∏á‡∏â‡∏±‡∏ô‡∏°‡∏µ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πá‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏Å‡πÑ‡∏´‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏≠‡∏µ‡∏õ‡∏¥‡∏Å‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô‡∏≠‡∏µ‡∏Å

 - ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°
‡πÄ‡∏•‡πà‡∏ô‡∏ö‡∏ô HTML + JS (Frontend 100%)
‡πÅ‡∏ö‡∏ö Single Screen (‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤)
‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡∏°‡∏∑‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏´‡∏£‡∏π ‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢
UI ‡πÉ‡∏ä‡πâ Pop-up ‡πÑ‡∏°‡πà‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤
‡∏£‡∏∞‡∏ö‡∏ö Auto Battle ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏•‡∏≠‡∏î SPD ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏î
‡∏°‡∏µ‡∏ù‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô 4 ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ö‡∏ô ‡πÅ‡∏•‡∏∞‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå 4 ‡πÉ‡∏ö‡∏•‡πà‡∏≤‡∏á
‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÅ‡∏ö‡∏ö Yu-Gi-Oh! animation
‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏≠‡∏°‡πÅ‡∏•‡∏∞‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ (Responsive Design)
‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏¢‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å (*.png)

- ‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå
‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏Ñ‡πâ‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏¢‡∏Å ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å
‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (modular, JSON-based)
‡∏û‡∏£‡πâ‡∏≠‡∏° deploy ‡∏ö‡∏ô GitHub ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

- Character Data (‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£)	HP, ATK, DEF, SPD, CRIT Rate, CRIT DMG, Effectiveness ‡∏Ø‡∏•‡∏Ø (‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å JSON)
Skill Set	Passive, Active Skill, Cooldown ‡∏Ø‡∏•‡∏Ø (‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö modular ‡πÑ‡∏î‡πâ)
Turn System (SPD Bar)	‡∏´‡∏•‡∏≠‡∏î SPD ‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏ï‡∏¥‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß (SPD)
Auto AI	‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢, ‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏° Priority
Damage System	‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏ï‡∏≤‡∏°‡∏™‡∏π‡∏ï‡∏£ Epic Seven (‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å ATK, DEF, skill multiplier ‡∏Ø‡∏•‡∏Ø)
Buff/Debuff Engine	‡πÄ‡∏ä‡πà‡∏ô stun, poison, burn, def break, attack up
Animation Engine	‡πÄ‡∏ä‡πà‡∏ô Card slide to attack, show damage, show buff/debuff effect
Battle Result	‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• (‡πÅ‡∏û‡πâ/‡∏ä‡∏ô‡∏∞, ‡∏î‡∏£‡∏≠‡∏õ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, EXP, Level Up)

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô
üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô (Stage Map)	- ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö ‚Äú‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‚Äù
- ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô Chapter/Zone
- ‡πÅ‡∏ï‡πà‡∏•‡∏∞ Chapter ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢ Stage
üßô‚Äç‚ôÇÔ∏è ‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ï‡∏≤‡∏°‡∏î‡πà‡∏≤‡∏ô (Enemy Wave)	- ‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏ü ‡πÄ‡∏ä‡πà‡∏ô 1-10 ‡πÄ‡∏ß‡∏ü/‡∏î‡πà‡∏≤‡∏ô
- ‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏¥‡πà‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡πâ‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏¢‡∏¥‡∏á‡πÄ‡∏Å‡πà‡∏á
üîÅ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡∏ã‡πâ‡∏≥ (Repeat / Sweep)	- ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö ‚Äú‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ã‡πâ‡∏≥‚Äù ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô
‚è±Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (Energy/Stamina)	- ‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô config)
üí• ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•	- ‡πÑ‡∏î‡πâ EXP, ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏°, ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö
üîì ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏î‡πà‡∏≤‡∏ô	- ‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡πà‡∏≤‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
üéÆ Auto Battle	- ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö auto battle ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß (SPD bar, animation, AI)
üìä ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ	- ‡∏™‡∏£‡∏∏‡∏õ‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞/‡πÅ‡∏û‡πâ
- ‡πÑ‡∏î‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á
- ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
üß∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å Admin	- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏®‡∏±‡∏ï‡∏£‡∏π, ‡∏î‡∏£‡∏≠‡∏õ, EXP, ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏î‡πà‡∏≤‡∏ô
üìÅ ‡∏£‡∏∞‡∏ö‡∏ö Modular	- ‡∏î‡πà‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .json ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏ú‡πà‡∏≤‡∏ô script ‡πÑ‡∏î‡πâ

- Skill Cooldown (CD) ‚Äî ‡∏™‡∏Å‡∏¥‡∏•‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå ‡∏ö‡∏±‡∏ü/‡∏î‡∏µ‡∏ö‡∏±‡∏ü (Buff & Debuff System)
üî¢ Cooldown Start	‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏• (CD = x turn)
‚è≥ CD Reduce	‡∏•‡∏î CD ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏ö‡∏£‡∏≠‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ü/‡∏™‡∏Å‡∏¥‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏©
üîí ‡∏™‡∏Å‡∏¥‡∏•‡∏ñ‡∏π‡∏Å‡∏•‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö CD	‡πÅ‡∏™‡∏î‡∏á ‚Äúcooldown number‚Äù ‡∏ö‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
‚è≤Ô∏è CD Reset	‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï CD ‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, passive ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏û‡∏¥‡πÄ‡∏®‡∏©
üß† ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö AI	‡∏´‡∏≤‡∏Å‡∏™‡∏Å‡∏¥‡∏•‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô CD ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å skill ‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‡∏£‡∏∞‡∏ö‡∏ö Buff / Debuff Engine
üü¢ Buff (‡∏ù‡πà‡∏≤‡∏¢‡πÄ‡∏£‡∏≤)	ATK‚Üë, DEF‚Üë, SPD‚Üë, Immune, Barrier, Heal over Time
üî¥ Debuff (‡∏ù‡πà‡∏≤‡∏¢‡∏®‡∏±‡∏ï‡∏£‡∏π)	Poison, Burn, Stun, DEF Break, Skill Block, Silence
üîÅ Duration	‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏°‡∏µ ‚Äú‡∏à‡∏≥‡∏ô‡∏ß‡∏ô turn‚Äù ‡πÄ‡∏ä‡πà‡∏ô 2 turn, 3 turn
‚è≥ Countdown	‡∏•‡∏î duration ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏à‡∏ö
‚ùå ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞	‡∏ö‡∏≤‡∏á‡∏™‡∏Å‡∏¥‡∏•‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡πâ‡∏≤‡∏á buff/debuff ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ
üõ°Ô∏è Immunity	‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏ö‡∏±‡∏ü‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ N turn
üîÄ Stackable	‡∏ö‡∏±‡∏ü/‡∏î‡∏µ‡∏ö‡∏±‡∏ü‡∏ö‡∏≤‡∏á‡∏ä‡∏ô‡∏¥‡∏î‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô poison x2)
üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≥‡πÄ‡∏û‡∏≤‡∏∞	‡∏ï‡∏±‡∏ß‡πÉ‡∏î‡πÇ‡∏î‡∏ô, ‡πÉ‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏™‡πà, ‡∏à‡∏∞‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏£
‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô UI
üí¨ ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô Buff/Debuff	‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡∏°‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πå‡∏î (‡πÄ‡∏ä‡πà‡∏ô ATK‚Üë, DEF‚Üì)
üî¢ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç turn	‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å‡πÅ‡∏™‡∏î‡∏á "2", "1", "‡∏´‡∏°‡∏î" ‡∏ö‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
üåÄ Animation	‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ü‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö
üß† Tooltip	‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover/click ‡∏ó‡∏µ‡πà‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô = ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô ‡πÜ
‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
‚öîÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ	‡πÉ‡∏ä‡πâ Buff/Debuff ‡πÅ‡∏•‡∏∞ CD ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô, ‡∏î‡∏≤‡πÄ‡∏°‡∏à, AI
üì¶ Inventory	‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏•‡∏î CD / ‡∏•‡πâ‡∏≤‡∏á debuff
üß™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î	‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏• skill ‚Üí ‡∏•‡∏î CD ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° turn ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ü
üßô‚Äç‚ôÇÔ∏è ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô	‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏°‡∏µ‡∏ö‡∏±‡∏ü‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡∏°‡∏µ ATK‚Üë 2 turn‚Äù
üß† AI	‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•‡∏ï‡∏≤‡∏° CD ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
üìä Battle Result	‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÄ‡∏Ñ‡∏¢‡∏ï‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏î‡πà‡∏≤‡∏ô (optional)
üõ† Admin Panel	‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ CD / ‡πÄ‡∏õ‡∏¥‡∏î skill ‡πÉ‡∏´‡∏°‡πà / ‡∏õ‡∏¥‡∏î skill ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏¥‡∏à

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ (Battle System)
‚ú® ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Auto-Battle Turn System ‡πÅ‡∏ö‡∏ö Epic Seven:
‡∏£‡∏∞‡∏ö‡∏ö SPD Bar ‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏™‡∏°: ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÅ‡∏™‡∏î‡∏á bar 
‡πÄ‡∏°‡∏∑‡πà‡∏≠ bar ‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏•‡∏≠‡∏î ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏∂‡∏á‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (AI)
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏à‡∏°‡∏ï‡∏µ: ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ AI ‡∏à‡∏≤‡∏Å‡∏•‡∏≥‡∏î‡∏±‡∏ö priority ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ skill
‡∏™‡∏π‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ:
‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‡πÄ‡∏õ‡πá‡∏ô animation slide (card slide to target)
‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≤‡πÄ‡∏°‡∏à ‡πÄ‡∏õ‡πá‡∏ô popup number ‡πÇ‡∏ú‡∏¢‡∏à‡∏∏‡∏î
‡∏ö‡∏≤‡∏á attack ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ê: ATK, DEF, Multiplier, CRIT
‡∏ö‡∏≤‡∏á debuff: burn, poison, stun, defense break
‡∏£‡∏∞‡∏ö‡∏ö Status Effect UI ‡∏ö‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î
‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏Å‡∏≤‡∏£:
‡∏£‡∏≤‡∏¢‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏π‡πâ: Win / Lose
‡πÅ‡∏™‡∏î‡∏á EXP ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£, Drop Item
‡∏Å‡∏≤‡∏£ Level Up
‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô:
UI ‡∏™‡∏ß‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà: team.html
‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ JSON ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡πÅ‡∏•‡∏∞‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß AI ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ
‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ (Single Target Attack)
Animation:
‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‚Äú‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‚Äù ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ä‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (slide-in)
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå ‚Äúhit‚Äù + popup damage
‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
UI/‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°
battle.js, ai.js, animationEngine.js
‡πÉ‡∏ä‡πâ‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏à‡∏≤‡∏Å char.json ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà result.js
‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏´‡∏°‡∏π‡πà (AoE Attack)
Animation:
‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‚Äú‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏ô‡∏≤‡∏°‚Äù ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏á‡∏û‡∏∏‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡πÉ‡∏ö
‡∏ó‡∏∏‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÇ‡∏î‡∏ô‡∏ï‡∏µ‡πÅ‡∏•‡∏∞ popup damage ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
‡πÄ‡∏™‡∏µ‡∏¢‡∏á/‡πÅ‡∏™‡∏á:
‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á + ‡πÅ‡∏™‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏ô‡∏≤‡∏°
UI/‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°:
effect.js (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà debuff), battle.js (‡∏•‡∏π‡∏õ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢)
‡∏î‡∏∂‡∏á‡∏™‡∏Å‡∏¥‡∏•‡∏à‡∏≤‡∏Å data/char/[id].json ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ skill.type = "aoe"
‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ animationEngine.js ‡πÅ‡∏¢‡∏Å‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ movement / effect layer
‡∏Æ‡∏µ‡∏• (Heal Skill)
Animation:
‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏ä‡∏¥‡∏î‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏ô‡∏≤‡∏° ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå ‚Äú‡∏û‡∏•‡∏±‡∏á‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‚Äù ‡∏û‡∏∏‡πà‡∏á‡πÑ‡∏õ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏Æ‡∏µ‡∏• (‡∏≠‡∏≤‡∏à‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß)
‡πÅ‡∏™‡∏î‡∏á +HP popup ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°:
effect.js ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Heal over time ‡∏´‡∏£‡∏∑‡∏≠ Immediate Heal
battle.js ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ skill.type = "heal" ‚Üí ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
‡∏ö‡∏±‡∏ü (Buff Skill ‡πÄ‡∏ä‡πà‡∏ô ATK‚Üë, SPD‚Üë)
Animation:
‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏á‡πÅ‡∏™‡∏á‡∏•‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞
‡πÅ‡∏™‡∏î‡∏á popup ‚ÄúATK‚Üë‚Äù ‚ÄúSPD‚Üë‚Äù ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πå‡∏î
‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°:
effect.js ‡πÉ‡∏™‡πà‡∏ö‡∏±‡∏ü, ‡πÄ‡∏û‡∏¥‡πà‡∏° duration
animationEngine.js ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô, tooltip, popup
battle.js ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ skill.buff ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô null ‚Üí ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å applyBuff()
‡∏™‡∏Å‡∏¥‡∏•‡∏ï‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Debuff ‡πÄ‡∏ä‡πà‡∏ô Stun, DEF‚Üì)
Animation:
‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö AoE/Single Target ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡πÇ‡∏ã‡πà‚Äù, ‚Äú‡∏´‡∏°‡∏≠‡∏Å‡∏û‡∏¥‡∏©‚Äù
‡∏ö‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏µ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏î‡∏µ‡∏ö‡∏±‡∏ü + countdown turn
‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°:
effect.js ‚Üí applyDebuff()
battle.js ‚Üí ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô stun = skip turn
‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥ (‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ)
1. animationEngine.js	‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ "slide", "bounce", "glow", "shake" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î ‡πÅ‡∏•‡∏∞‡∏™‡∏Å‡∏¥‡∏•
2. popupManager.js	‡πÅ‡∏¢‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏î‡∏≤‡πÄ‡∏°‡∏à, Heal, Buff Text
3. cardEffectLayer (HTML)	<div class="effect-layer"> ‡∏ã‡πâ‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á FX ‡πÅ‡∏ö‡∏ö Overlay
4. skillProcessor.js	‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏™‡∏Å‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí return ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (target, heal, buff, debuff, damage)
5. AI Selector	‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ skill ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏Å‡∏¥‡∏•‡∏´‡∏°‡∏π‡πà‡∏ñ‡πâ‡∏≤‡∏°‡∏≠‡∏ô‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 2 ‡∏ï‡∏±‡∏ß
‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
battle.js	‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô, ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• SPD bar, ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•, ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
effect.js	‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Buff, Debuff, Heal, Duration
animationEngine.js	‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô, ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÇ‡∏à‡∏°‡∏ï‡∏µ, Heal/Buff
char.json, skill.json	‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏Å‡∏¥‡∏• ‡πÄ‡∏ä‡πà‡∏ô type, power, target, CD, effect
ai.js	‡πÉ‡∏´‡πâ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏¥‡∏•/‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Æ‡∏µ‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î
ui.js	‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Pop-up / ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ (tooltip ‡∏™‡∏Å‡∏¥‡∏•, turn bar)

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ
‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå	‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
üì¶ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î	‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ, ‡∏ä‡∏∑‡πà‡∏≠, ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
üß∞ ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ	‡πÄ‡∏ä‡πà‡∏ô EXP Potion, Skill Book
üß™ ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î	‡πÄ‡∏ä‡πà‡∏ô Rune ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
üîí ‡∏•‡πá‡∏≠‡∏Å‡∏ö‡∏≤‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏≤‡∏î	
üîÑ Sort / Filter	‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î: ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö, ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°, EXP, Rune ‡∏Ø‡∏•‡∏Ø
üìú Scroll ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö Responsive	‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏ô‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î
UI ‡πÅ‡∏ö‡∏ö Pop-up
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° (Item Inventory)     üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ üß™ ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° 1  (x99)        üìò ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢  ‚îÇ
‚îÇ üí† ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° 2  (x32)        üìò ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢  ‚îÇ
‚îÇ üß± ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° 3  (x11)        üìò ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏¢     ‚îÇ
‚îÇ ... (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°) ...             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ‚Üí ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î, ‡∏õ‡∏∏‡πà‡∏° "‡πÉ‡∏ä‡πâ", ‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô"
‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏Å‡πÉ‡∏ô UI
‚ùÑÔ∏è ‡πÉ‡∏ä‡πâ grid ‡πÅ‡∏ö‡∏ö 4x3 ‡∏´‡∏£‡∏∑‡∏≠ 5x4 (Responsive)
‚¨áÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 20 ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ‚Üí scroll ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
üîÑ ‡∏õ‡∏∏‡πà‡∏° ‚ÄúSort / Filter‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ
üß† ‡πÉ‡∏ä‡πâ icon ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏° tooltip ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏∑‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
üó∫Ô∏è ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô	‡∏î‡∏£‡∏≠‡∏õ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô inventory
üß™ ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î	‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÄ‡∏ä‡πà‡∏ô EXP Potion, Rune, Skill Book
üéÅ Redeem Code	‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà inventory ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤	‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ‚Üí ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
üß© ‡∏Å‡∏≤‡∏ä‡∏≤	‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡πã‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤/‡πÄ‡∏û‡∏ä‡∏£‡∏à‡∏≤‡∏Å inventory
üõ† Admin Panel	‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏ô inventory ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
‚öîÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ	‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡∏î‡πà‡∏≤‡∏ô ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô inventory
üîß ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å Pop-up	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ‚Üí ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
‡πÄ‡∏Å‡πá‡∏ö ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏° ‡πÄ‡∏ä‡πà‡∏ô:
Level, EXP
HP / ATK / DEF / SPD / CRIT ‡∏Ø‡∏•‡∏Ø
Skill Level, Passive
‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡∏°, ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏ô, lock/unlock
üü• ‡∏Å‡∏•‡πà‡∏≠‡∏á Pop-up ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ñ‡∏∂‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
‚îú‚îÄ‚îÄ üîé ‡πÅ‡∏ñ‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ / ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á / Sort
‚îú‚îÄ‚îÄ üîÅ Tabs ‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î (‡∏ï‡∏≤‡∏°‡∏î‡∏≤‡∏ß, ‡∏ò‡∏≤‡∏ï‡∏∏, ‡∏ó‡∏µ‡∏° ‡∏Ø‡∏•‡∏Ø)
‚îú‚îÄ‚îÄ üü¶ Grid ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î (Scroll ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á)
‚îÇ     ‚îú‚îÄ‚îÄ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö Responsive ‡πÄ‡∏ä‡πà‡∏ô 3x4 (‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠), 6x4 (PC)
‚îÇ     ‚îú‚îÄ‚îÄ ‡πÉ‡∏ä‡πâ Lazy Load ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏∏‡∏Å‡πÉ‡∏ö
‚îú‚îÄ‚îÄ ‚ÑπÔ∏è ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡∏¢‡πà‡∏≠‡∏¢ (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î): ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡πâ‡∏ô
‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå UI ‡∏´‡∏•‡∏±‡∏Å
üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£	‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
üîÑ Sort	‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏î‡∏≤‡∏ß, ‡πÄ‡∏•‡πÄ‡∏ß‡∏•, ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤‡∏¢‡∏≤‡∏Å ‡∏Ø‡∏•‡∏Ø
üè∑Ô∏è Filter	‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ò‡∏≤‡∏ï‡∏∏ (‡πÑ‡∏ü ‡∏ô‡πâ‡∏≥ ‡∏•‡∏° ‡∏°‡∏∑‡∏î ‡πÅ‡∏™‡∏á), ‡∏Ñ‡∏•‡∏≤‡∏™ (‡πÅ‡∏ó‡πá‡∏á‡∏Ñ‡πå ‡∏Æ‡∏µ‡∏• ‡∏Ø‡∏•‡∏Ø)
üìú Scroll ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á	‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏ß ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
üßä ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‚ÄúCard Grid‚Äù	‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á 1 ‡∏ï‡∏±‡∏ß/‡∏ä‡πà‡∏≠‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏î‡∏≤‡∏ß/‡πÄ‡∏•‡πÄ‡∏ß‡∏•
üß∞ Lazy Loading	‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á
üß† Responsive Design	‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ = 2-3 ‡∏Å‡∏≤‡∏£‡πå‡∏î/‡πÅ‡∏ñ‡∏ß, PC = 5-6 ‡∏Å‡∏≤‡∏£‡πå‡∏î/‡πÅ‡∏ñ‡∏ß
‡∏à‡∏∏‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Ç‡∏≠‡∏á ‚Äú‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‚Äù ‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏ä‡∏≤	‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ character list ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
üßô‚Äç‚ôÇÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô	‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏•‡∏á‡∏™‡∏π‡πâ
‚öîÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡∏°	‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡∏° 4 ‡∏ï‡∏±‡∏ß
üß™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î	‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏•‡πÄ‡∏ß‡∏•, ‡∏™‡∏Å‡∏¥‡∏• ‡∏Ø‡∏•‡∏Ø
üõ† ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (admin.html)	‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤	‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á
üì§ Redeem Code	‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ú‡πà‡∏≤‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
üìä Battle Result	‡πÄ‡∏û‡∏¥‡πà‡∏° EXP ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡∏î‡πà‡∏≤‡∏ô
üîí ‡∏£‡∏∞‡∏ö‡∏ö Lock/Unlock	‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à

- ‡∏£‡∏∞‡∏ö‡∏ö ‚Äú‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô (Rune System)‚Äù
‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏ô (Rune Slot + Property)
‡∏£‡∏π‡∏ô	‡∏ä‡πà‡∏≠‡∏á	‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏´‡∏•‡∏±‡∏Å	‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏£‡∏≠‡∏á (‡∏™‡∏∏‡πà‡∏°)	‡πÄ‡∏ã‡πá‡∏ï (‡∏ñ‡πâ‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏£‡∏ö‡∏à‡∏∞‡∏°‡∏µ‡∏ö‡∏±‡∏ü‡∏û‡∏¥‡πÄ‡∏®‡∏©)
ATK Rune	Slot 1	ATK + %	HP%, SPD, CRIT	Rage (ATK+35%)
SPD Rune	Slot 2	SPD	ATK%, DEF, HP	Speed Set (SPD+25%)
CRIT Rune	Slot 4	CRIT%	ATK%, SPD, Effectiveness	Critical Set (CRIT+12%)
UI ‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô (Pop-up ‡πÅ‡∏ö‡∏ö Responsive)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‡∏£‡∏π‡∏ô‡∏Ç‡∏≠‡∏á Astra ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Slot 1: [SPD Rune +25] (x) ‚îÇ
‚îÇ Slot 2: [ATK Rune +15%] (x) ‚îÇ
‚îÇ Slot 3: [‡∏ß‡πà‡∏≤‡∏á]       [+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏ô] ‚îÇ
‚îÇ ...                          ‚îÇ
‚îÇ üéØ ‡∏ö‡∏±‡∏ü‡πÄ‡∏ã‡πá‡∏ï: Speed Set (SPD +25%) ‚îÇ
‚îÇ [‡∏ñ‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î] [‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å]         ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á + ‡∏õ‡∏∏‡πà‡∏° ‚Äú‡∏ñ‡∏≠‡∏î / ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‚Äù
üîÑ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô SPD +15 ‚Üí +40
‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏±‡∏ü‡∏û‡∏¥‡πÄ‡∏®‡∏©
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
battle.js	‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ SPD/ATK/CRIT ‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏ô	‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠ SPD Bar, ‡∏î‡∏≤‡πÄ‡∏°‡∏à, ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô
char.js	‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà‡∏ï‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£	‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏ô
inventory.js	‡∏£‡∏π‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô inventory	‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏î ‚Äú‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‚Äù ‡∏ö‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
upgrade.js	‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏£‡∏π‡∏ô (‡πÄ‡∏™‡∏£‡∏¥‡∏° sub stat)	‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô/‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏π‡∏ô
admin.js	‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô	‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô
gacha.js	‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏û‡πá‡∏Å ‚Äú‡∏£‡∏π‡∏ô‡∏™‡∏∏‡πà‡∏°‚Äù ‡πÑ‡∏î‡πâ	‡πÄ‡∏ä‡πà‡∏ô Summon Rune Pack
redeem.js	‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏ô‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°	‡πÉ‡∏™‡πà‡πÄ‡∏Ç‡πâ‡∏≤ inventory ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (Admin Panel ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)
‚îå‚îÄ‚îÄ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏ô ‚îÄ‚îÄ‚îê
| [+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏ô‡πÉ‡∏´‡∏°‡πà]               |
| [üõ† ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏ô ID: r001]     |
| Slot: 2, Main: SPD+25       |
| Sub: ATK%+7, Effect+4     |
| Set: Speed                 |
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏£‡∏π‡∏ô (Upgrade Rune Feature)
üìà ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏£‡∏π‡∏ô	+‡πÄ‡∏•‡πÄ‡∏ß‡∏• 1-15 ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏°
üîÄ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡πà‡∏≠‡∏¢	‡πÄ‡∏•‡πÄ‡∏ß‡∏• 3/6/9/12 ‡∏à‡∏∞‡∏™‡∏∏‡πà‡∏° sub stat ‡πÄ‡∏û‡∏¥‡πà‡∏°
üß™ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÉ‡∏ä‡πâ	Rune Dust ‡∏´‡∏£‡∏∑‡∏≠ Gold
üß† ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö inventory	‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏•‡∏î‡∏•‡∏á‡∏à‡∏≤‡∏Å inventory

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
‚≠ê ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏õ (Level Up)	‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏à‡∏≤‡∏Å EXP ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ "EXP Potion"	EXP Item / ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô
üåü ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏Ç‡∏±‡πâ‡∏ô (Promotion / Awaken)	‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≤‡∏Å 3‚òÖ ‚Üí 4‚òÖ ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏© + ‡πÄ‡∏á‡∏¥‡∏ô	‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö / Gold
üí™ ‡∏≠‡∏±‡∏õ‡∏Ñ‡πà‡∏≤‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™ (Stats Boost)	‡πÄ‡∏û‡∏¥‡πà‡∏° HP/ATK/DEF/CRIT SPD ‡πÅ‡∏¢‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ‚Äú‡∏£‡∏π‡∏ô‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú‡∏™‡∏Å‡∏¥‡∏•‡∏≠‡∏±‡∏õ‚Äù	Rune / Token
üåÄ ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏™‡∏Å‡∏¥‡∏• (Skill Upgrade)	‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏á ‡∏•‡∏î‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡∏Å‡∏¥‡∏• / ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö	Skill Book / Rare Material
üîì ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å Passive	‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ù‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ñ‡∏∂‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡∏Ç‡∏±‡πâ‡∏ô	‡πÑ‡∏°‡πà‡∏°‡∏µ / ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
üì¶ Inventory	‡πÉ‡∏ä‡πâ EXP Item, ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö, ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å inventory
üó∫Ô∏è ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô	‡∏î‡∏£‡∏≠‡∏õ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î / EXP ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
üõ† Admin Panel	‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î, ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å, ‡πÉ‡∏™‡πà‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
üéÅ Redeem Code	‡πÅ‡∏à‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏ú‡πà‡∏≤‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ
üìö Gacha	‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ã‡πâ‡∏≥‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡∏Ç‡∏±‡πâ‡∏ô (‡∏£‡∏∞‡∏ö‡∏ö Limit Break ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
üéÆ Battle	‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤	‡∏Ç‡∏≤‡∏¢‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î ‡πÄ‡∏ä‡πà‡∏ô Skill Book, EXP Potion
UI ‡πÅ‡∏ö‡∏ö Pop-up
‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£, ‡∏ä‡∏∑‡πà‡∏≠, ‡πÄ‡∏•‡πÄ‡∏ß‡∏•, EXP bar, ‚òÖ ‡∏î‡∏≤‡∏ß
‡∏õ‡∏∏‡πà‡∏° [‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏•], [‡∏≠‡∏±‡∏õ‡∏Ç‡∏±‡πâ‡∏ô], [‡∏≠‡∏±‡∏õ‡∏™‡∏Å‡∏¥‡∏•], [‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô]
‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ (‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å inventory)
‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô / ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö
‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ ‡πÄ‡∏ä‡πà‡∏ô HP +120, Skill Level +1

- ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå / ‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à
‚úÖ ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (Daily Quest)	‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏∏‡∏Å 24 ‡∏ä‡∏°.	‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ, ‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
üïí ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (Weekly Quest)	‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏∏‡∏Å 7 ‡∏ß‡∏±‡∏ô	‡∏ä‡∏ô‡∏∞ 10 ‡∏î‡πà‡∏≤‡∏ô, ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏ä‡∏≤ 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
üó∫Ô∏è ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå (Event Quest)	‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≥‡∏Å‡∏±‡∏î	‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° x5, ‡∏™‡∏∞‡∏™‡∏°‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©
üßô‚Äç‚ôÇÔ∏è ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á (Story Quest)	‡∏ó‡∏≥‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß	‡∏ú‡πà‡∏≤‡∏ô Chapter 1-5, ‡∏≠‡∏±‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ñ‡∏∂‡∏á‡πÄ‡∏•‡πÄ‡∏ß‡∏• 10
ü™ú ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î (Progression)	‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô	‡πÉ‡∏ä‡πâ EXP Potion 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚Üí ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ = 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö UI
üî≥ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏±‡∏ô	‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠, ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢, progress bar, ‡∏õ‡∏∏‡πà‡∏° ‚Äú‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‚Äù
üóÇ Tabs ‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î	Daily / Weekly / Event / Story
‚è≥ ‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤	‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå daily = ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
üéÅ ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡πâ‡∏ß
UI ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ö‡∏ö Pop-up
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üéØ ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô                 üïí 23:45:12 ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ                      [ ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ] ‚îÇ
‚îÇ ‚ñ∂ ‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (2/3)     [ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ] ‚îÇ
‚îÇ ‚ñ∂ ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ 1 ‡∏ï‡∏±‡∏ß             [ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ] ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
üì¶ Inventory	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, ‡πÄ‡∏û‡∏ä‡∏£, ‡∏ï‡∏±‡πã‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤ ‡∏Ø‡∏•‡∏Ø
üß™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ / ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô	‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡∏¢‡∏ä‡∏ô‡∏∞
üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏ä‡∏≤	‡∏ï‡∏£‡∏ß‡∏à‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô 1 ‡∏´‡∏£‡∏∑‡∏≠ 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
üìà ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏õ	‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ñ‡∏∂‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏´‡∏°
üß† ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô	‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå (completed / claimed)
üõ† Admin Panel	‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Event Quest
‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á
üïí Quest Timer Manager	‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏Ñ‡∏ß‡∏£ ‚Äú‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‚Äù
üìä Quest Tracker	‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á progress
üéÅ Reward Handler	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå ‚Üí ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ inventory
üîê Claim Flag System	‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÑ‡∏´‡∏ô‡∏Å‡∏î‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏ã‡πâ‡∏≥)
üí¨ Notification	‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡πÅ‡∏î‡∏á‡∏ö‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå‡πÉ‡∏î ‡πÜ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö

- ‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô / ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® (Notification & Announcement System) ‡πÄ‡∏õ‡πá‡∏ô ‚Äú‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤‚Äù
‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (General)	‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï, ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏∞‡∏ö‡∏ö	‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å
üÜï ‡πÅ‡∏û‡∏ï‡∏ä‡πå‡πÇ‡∏ô‡πâ‡∏ï (Patch Notes)	‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏Å‡∏¥‡∏•, ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà	‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ó‡∏±‡∏ô
üéÅ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á (Reward Info)	‡πÅ‡∏à‡∏Å‡πÄ‡∏û‡∏ä‡∏£‡∏ü‡∏£‡∏µ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏Å‡∏°	‡πÄ‡∏û‡∏¥‡πà‡∏° retention
‚è±Ô∏è ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (Event)	‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©/‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà	‡∏î‡∏∂‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö (System Warning)	‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏õ‡∏¥‡∏î, ‡∏ö‡∏±‡πä‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ	‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏à‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
üõí ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (Shop Update)	‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏°‡πà, ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©	‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠
üì® ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (Personal Inbox)	‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à, ‡∏Å‡∏≤‡∏ä‡∏≤‡∏≠‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£	‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö UI
üîî ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®" ‡∏ö‡∏ô‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô (‡∏°‡∏µ‡∏à‡∏∏‡∏î‡πÅ‡∏î‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÉ‡∏´‡∏°‡πà)	
üìÉ ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤	
üßæ ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ö‡∏ö Scroll ‡πÑ‡∏î‡πâ	
üìå ‡∏°‡∏µ "Pin ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®" ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° / ‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á	
‚õî ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ö‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ (start_time ‚Äì end_time)	
üí¨ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Emoji, Rich Text (‡πÉ‡∏ä‡πâ HTML + CSS)
‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
| [ + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® ]  |
| üîò ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: patch / event / shop |
| üìÜ ‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏™‡∏î‡∏á: 2025-05-01 ‡∏ñ‡∏∂‡∏á 2025-05-10 |
| üßæ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: ...                              |
| üîî ‡πÅ‡∏™‡∏î‡∏á popup ‡πÄ‡∏°‡∏∑‡πà‡∏≠ login: ‚úÖ |
| üìå ‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î: ‚úÖ   ‚ùå ‡∏•‡∏ö  ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç |
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
üõ† Admin Panel	‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
üéÅ ‡πÅ‡∏à‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°/‡πÇ‡∏Ñ‡πâ‡∏î	‡∏Ñ‡∏•‡∏¥‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î/‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á
üó∫Ô∏è Event Dungeon	‡∏Å‡∏î‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà event ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤	‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î shop event ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚öîÔ∏è ‡πÅ‡∏û‡∏ï‡∏ä‡πå‡∏î‡∏≤‡πÄ‡∏°‡∏à/‡∏™‡∏Å‡∏¥‡∏•	‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÑ‡∏´‡∏ô buff/nerf
üë§ ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô	‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (inbox)
üì• ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô real-time	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏Ç‡∏∂‡πâ‡∏ô Pop-up ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á refresh
‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ (Admin Panel)
‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÉ‡∏´‡∏°‡πà	‡πÉ‡∏™‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠, ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó, ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°/‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏Å‡πà‡∏≤	‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚ùå ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®	‡∏•‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏ô (inactive)
üìÜ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏™‡∏î‡∏á	‡πÉ‡∏™‡πà start_time ‡πÅ‡∏•‡∏∞ end_time ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á
üìå Pin ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç	‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î
üîî ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ "popup" ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (Admin Panel)
‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏µ‡∏Å‡∏´‡∏ô‡πâ‡∏≤ (admin.html)
‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á
‡πÉ‡∏ä‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÅ‡∏ö‡∏ö Real-Time ‡πÅ‡∏•‡πâ‡∏ß Reflect ‡∏ö‡∏ô‡πÄ‡∏Å‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
UI ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ö‡∏ô‡πÑ‡∏≠‡∏î‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏∏‡∏Å‡πÇ‡∏ó‡∏©‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡πÑ‡∏î‡πâ
‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏∏‡∏•‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ
‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏à‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÑ‡∏î‡πâ 1 ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡πà‡∏≠ 1‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏à‡∏Å‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡πÑ‡∏≠‡∏î‡∏µ

- ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ã‡∏ü‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏î‡∏µ-‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÇ‡∏î‡∏¢‡πÑ‡∏≠‡∏î‡∏µ-‡∏£‡∏´‡∏±‡∏™‡∏ù‡∏±‡πà‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ
‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢

- ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÇ‡∏Ñ‡πâ‡∏î
üéÅ ‡πÅ‡∏à‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î	‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏à‡∏Å 500 ‡πÄ‡∏û‡∏ä‡∏£, ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ 5‚òÖ, ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
üïí ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ	‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 7 ‡∏ß‡∏±‡∏ô
üë• ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ	‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà 50 ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å
üë§ ‡∏à‡∏≥‡∏Å‡∏±‡∏î 1 ‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á	‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ã‡πâ‡∏≥
üîê ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô	‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡∏∞‡∏ï‡∏±‡∏ß ‡πÅ‡∏ï‡πà‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÉ‡∏ô event ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ
üîë ‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (Unique per user)	‡πÄ‡∏ä‡πà‡∏ô AIRRIN-01-ABC123 ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
üîÅ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° (Public Shared Code)	‡πÄ‡∏ä‡πà‡∏ô WELCOME2025 ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠ 1 ‡∏Ñ‡∏ô ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100 ‡∏Ñ‡∏ô
‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£
üîê ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (ID/‡∏£‡∏´‡∏±‡∏™)	‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î ‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡∏ã‡πâ‡∏≥
üì¶ ‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°/‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£	‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ inventory / character list
üõ† Admin Panel	‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏•‡∏ö/‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î (‡πÅ‡∏ö‡∏ö real-time)
üìú Gacha System	‡πÅ‡∏à‡∏Å ‚Äú‡∏ï‡∏±‡πã‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‚Äù ‡∏ú‡πà‡∏≤‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ
üß≠ ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô / Event	‡πÅ‡∏à‡∏Å ‚Äú‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‚Äù ‡πÑ‡∏î‡πâ
UI ‡πÅ‡∏ö‡∏ö Pop-up ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î
‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏ö‡∏ö‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ
‡∏°‡∏µ input ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß + ‡∏õ‡∏∏‡πà‡∏° [‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô]
‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ ‚ûú ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• + ‡∏õ‡∏∏‡πà‡∏° OK
‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡∏ú‡∏¥‡∏î/‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‚ûú ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÑ‡∏î‡πâ)
‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î (‡πÉ‡∏ô admin.html)
üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà	‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î, ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•, ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ
üìã ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà	‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏£‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
üìä ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß	‡∏Å‡∏î‡∏î‡∏π used_by ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ
‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
üéØ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°	- ‡∏™‡∏∏‡πà‡∏° 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
- ‡∏™‡∏∏‡πà‡∏° 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
üß© ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏ä‡∏≤	- ‡∏Å‡∏≤‡∏ä‡∏≤‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô Premium Summon)
- ‡∏Å‡∏≤‡∏ä‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏¥‡∏à (Event)
- ‡∏Å‡∏≤‡∏ä‡∏≤ Friendship (‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ï‡πâ‡∏°‡∏ü‡∏£‡∏µ)
üî¢ ‡∏£‡∏∞‡∏ö‡∏ö Rarity	- ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö 3‚òÖ, 4‚òÖ, 5‚òÖ
- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Drop Rate ‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô 3‚òÖ = 75%, 4‚òÖ = 20%, 5‚òÖ = 5%
üéûÔ∏è ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏ä‡∏≤	- ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û/‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏´‡∏°‡∏∏‡∏ô, ‡∏£‡∏∞‡πÄ‡∏ö‡∏¥‡∏î‡πÅ‡∏™‡∏á
üß™ ‡∏£‡∏∞‡∏ö‡∏ö Pity (‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ)	- ‡∏´‡∏≤‡∏Å‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏£‡∏ö N ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ 5‚òÖ ‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
üíé ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£	- ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏ä‡∏£/‡∏ï‡∏±‡πã‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤/‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∏‡πà‡∏°
üì¶ ‡∏£‡∏∞‡∏ö‡∏ö Inventory	- ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤ ‚Äú‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‚Äù ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
üß∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å Admin	- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏ä‡∏≤, ‡∏õ‡∏£‡∏±‡∏ö Drop Rate
- ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏ä‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏ö‡∏ö Real-time
üßæ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏° (Gacha Log)	- ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ
- Admin ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏π‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏î‡πâ

- ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
üõí ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å (Shop - Currency)	‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏°, ‡πÄ‡∏û‡∏ä‡∏£, ‡πÅ‡∏ï‡πâ‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
üß™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏© (Event Shop)	‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
üåÄ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä (Secret Shop)	‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ / ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏û‡∏ä‡∏£
üßô‚Äç‚ôÇÔ∏è ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ (Hero Shop)	‡πÅ‡∏•‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ï‡∏£‡∏á ‡πÜ ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ï‡πâ‡∏° Soul ‡∏´‡∏£‡∏∑‡∏≠ Token
ü™ô ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡∏¥‡∏•‡∏î‡πå (Guild Shop)	‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡∏Å‡∏¥‡∏•‡∏î‡πå (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Guild ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
üì¶ ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î	‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏õ‡∏∏‡πà‡∏°‡∏ã‡∏∑‡πâ‡∏≠
üõ°Ô∏è ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠	‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á, ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏£‡∏ß‡∏° 10 ‡∏ä‡∏¥‡πâ‡∏ô
‚è±Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤	(‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Secret Shop) ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å X ‡∏ô‡∏≤‡∏ó‡∏µ
üîê ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô	‡∏£‡πâ‡∏≤‡∏ô‡∏ö‡∏≤‡∏á‡πÅ‡∏ö‡∏ö (‡πÄ‡∏ä‡πà‡∏ô Event Shop) ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
üõçÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Pop-up	UI ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏ï‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ã‡πâ‡∏≠‡∏ô‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
üí∏ ‡∏´‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£	‡∏´‡∏±‡∏Å‡∏à‡∏≤‡∏Å inventory ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à / ‡πÑ‡∏°‡πà‡∏û‡∏≠	
üì• ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤ inventory ‡∏´‡∏£‡∏∑‡∏≠ character list
‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
üì¶ Inventory	‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à / ‡∏´‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£
üë• Character Collection	‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
üîê Player Data (ID)	‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∞‡πÑ‡∏£‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå	‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤
üõ† Admin Panel	‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
üéÅ Redeem Code (‡∏ú‡∏π‡∏Å‡πÑ‡∏î‡πâ)	‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏•‡∏Å‡∏ï‡∏±‡πã‡∏ß‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠ token ‡∏û‡∏¥‡πÄ‡∏®‡∏©
üó∫Ô∏è ‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô/Event	‡πÑ‡∏î‡πâ token ‡∏à‡∏≤‡∏Å‡∏î‡πà‡∏≤‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡πÑ‡∏î‡πâ
‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö UI ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ Pop-up
‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤	‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô, ‡∏ä‡∏∑‡πà‡∏≠, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏õ‡∏∏‡πà‡∏° "‡∏ã‡∏∑‡πâ‡∏≠"
Currency Bar	‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô/‡πÄ‡∏û‡∏ä‡∏£/‡πÅ‡∏ï‡πâ‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
Tabs	‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ‡πÄ‡∏ä‡πà‡∏ô [Shop], [Event Shop]
‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏ã‡∏∑‡πâ‡∏≠ ‚Üí ‡∏Ç‡∏∂‡πâ‡∏ô‡∏õ‡πä‡∏≠‡∏õ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå

- ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó
üó®Ô∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏ä‡∏ó	‚úÖ Global Chat (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô)
‚úÖ System Chat (‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏π‡∏î)
üßë‚Äçü§ù‚Äçüßë ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô	‡πÅ‡∏™‡∏î‡∏á [‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô] : ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å data/user.json)
üïí Timestamp	‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô [17:15] Achiraya : ‡πÑ‡∏õ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏£‡∏π‡∏ô‡∏Å‡∏±‡∏ô‡πÑ‡∏´‡∏°
üö® System Message	‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß 5‚òÖ ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏ä‡∏≤‚Äù
üîê ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥	‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö
‚úÖ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
‚úÖ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ñ‡∏µ‡πà
üì• ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å	‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏ô data/chat.json (‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà N ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡πÄ‡∏ä‡πà‡∏ô 50)
üîÉ Refresh	‡πÉ‡∏ä‡πâ setInterval() ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å 3-5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
üß† Responsive UI	‚úÖ ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö‡πÅ‡∏ñ‡∏ö‡∏•‡πà‡∏≤‡∏á / PC ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏∞‡∏Å‡∏∞‡∏â‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
‚úçÔ∏è ‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°	‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á (Enter ‡∏Å‡πá‡∏™‡πà‡∏á‡πÑ‡∏î‡πâ)
üîï Mute Option	[Optional] ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ä‡∏ó ‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ä‡∏ó
‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö	‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
auth.js + data/user.json	‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ / ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏ä‡∏ó
admin.js	‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° / ‡πÅ‡∏ö‡∏ô‡πÑ‡∏≠‡∏î‡∏µ‡∏™‡πà‡∏á‡πÅ‡∏ä‡∏ó
announcement.js	‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏∞‡∏î‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏ä‡∏ó‡πÄ‡∏õ‡πá‡∏ô "System Message"
gacha.js	‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 5‚òÖ ‚Üí ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ system chat ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
battle.js [optional]	‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô A ‡∏ä‡∏ô‡∏∞‡∏ö‡∏≠‡∏™‡πÄ‡∏ß‡∏ü 100‚Äù
data/chat.json	‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å ‚Üí ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
admin.html	‡∏î‡∏π log ‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, ‡∏•‡∏ö‡∏Ñ‡∏≥‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°, ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°
‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
‚úÖ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡πà‡∏á‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 1 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° / 3 ‡∏ß‡∏¥)
‚úÖ ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô (‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å data/banned_words.json)
‚úÖ ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà HTML / JS ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à inject ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏•‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
‚úÖ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° + ‡∏î‡∏π log ‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (Admin Panel)
‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏° (admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
‡∏ö‡∏•‡πá‡∏≠‡∏Å ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏°
Export log ‡πÅ‡∏ä‡∏ó

‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≤‡∏¢‡∏•‡πå + ‡πÇ‡∏Ñ‡πâ‡∏î
‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡πÑ‡∏ü‡∏•‡πå ‡∏™‡∏≤‡∏£‡∏∞‡∏ö‡∏±‡∏ï‡∏£ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ (‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏î‡πâ)
1 index.html, ui.js, style.css ‚Äì ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å UI, ‡πÄ‡∏°‡∏ô‡∏π, ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ | ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤ default ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Pop-up ‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
2 data/char/*.json ‚Äì ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ | ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô team.html, battle.js, upgrade.js, gacha.js
3 team.html, team.js ‚Äì ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏° | ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å char.json, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏µ‡∏°‡∏•‡∏á battle
4 battle.js, ai.js, animationEngine.js, effect.js ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ, AI, ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô, ‡∏ö‡∏±‡∏ü‡∏î‡∏µ‡∏ö‡∏±‡∏ü | ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ, ‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö stage, team
5 result.js ‚Äì ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ | EXP, Drop, Level Up
6 popupManager.js, cardEffectLayer ‚Äì ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏î‡∏≤‡πÄ‡∏°‡∏à, Heal, Buff | ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô UI ‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
7 data/item.json, inventory.js ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° | ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö shop, upgrade, reward, redeem
8 upgrade.js, data/upgrade.json ‚Äì ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ | ‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏à‡∏≤‡∏Å inventory, ‡∏≠‡∏±‡∏õ skill, level, passive
9 rune.js, data/rune.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏π‡∏ô | ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö inventory, upgrade, character stat
10 gacha.js, data/gacha.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ | ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£, ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö log, pity, item
11 quest.js, data/quest/*.json ‚Äì ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå Daily/Weekly/Event | ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÄ‡∏ä‡πà‡∏ô dungeon, battle
12 stage.js, data/stage/*.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô | ‡∏°‡∏µ‡πÄ‡∏ß‡∏ü, ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà, ‡∏ö‡∏≠‡∏™, drop item, unlock stage
13 shop.js, data/shop.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ | ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á, ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏£‡∏≠‡∏ö, ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö inventory
14 announcement.js, data/announcement.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡πà‡∏≤‡∏ß | ‡πÅ‡∏™‡∏î‡∏á popup, ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö event, patch note
15 redeem.js, data/redeem.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î | ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á, ‡∏à‡∏≥‡∏Å‡∏±‡∏î 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á, ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö user ID
16 auth.js, data/user.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô | ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå, ‡∏ú‡∏π‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏Å‡∏±‡∏ö inventory, character
17 characterCollection.js ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ | ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞, ‡∏î‡∏π stat, ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏à‡∏≤‡∏Å inventory
18 passive.js, data/passive.json ‚Äì Passive ‡∏û‡∏¥‡πÄ‡∏®‡∏© | ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô battle, upgrade, rune synergy
19 admin.html, admin.js ‚Äì ‡πÅ‡∏ú‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô | ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏•‡∏ö user, item, skill, quest, gacha, redeem
20 chat.js, data/chat.json, banned_words.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó | ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°, ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏≥, ‡πÅ‡∏™‡∏î‡∏á system message
21 gachaLog.js, data/gacha_log.json ‚Äì Log ‡∏Å‡∏≤‡∏ä‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô | ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á, admin audit ‡πÑ‡∏î‡πâ
22 energy.js, data/energy.json ‚Äì ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô / stamina | ‡πÉ‡∏ä‡πâ‡∏•‡∏î‡∏ï‡∏≠‡∏ô‡∏•‡∏á‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô, ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
23 data/config.json ‚Äì ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡∏°‡∏´‡∏•‡∏±‡∏Å | ‡πÄ‡∏ä‡πà‡∏ô cooldown base, exp rate, drop rate
24 localization.js, data/lang/*.json ‚Äì ‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏©‡∏≤ | ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô UI, ‡πÅ‡∏õ‡∏•‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ö‡∏ö modular

‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå \index.html
<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>Epic Seven Card Auto Battle</title>
    <link rel="stylesheet" href="css/style.css" />
    <link rel="icon" href="favicon.ico" />
</head>
<body class="dark-bg">

    <!-- NAVBAR -->
    <header>
        <nav class="navbar">
            <div class="logo">EPIC Seven - Card Battle</div>
            <ul class="menu">
                <li><button id="btnTeam">‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°</button></li>
                <li><button id="btnBattle">‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ</button></li>
                <li><button id="btnInventory">‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°</button></li>
                <li><button id="btnQuest">‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå</button></li>
                <li><button id="btnShop">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</button></li>
                <li><button id="btnGacha">‡∏Å‡∏≤‡∏ä‡∏≤</button></li>
                <li><button id="btnCharacter">‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£</button></li>
                <li><button id="btnAnnouncement">‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®</button></li>
                <li><button id="btnChat">‡πÅ‡∏ä‡∏ó</button></li>
            </ul>
            <div class="profile">
                <span id="playerName"></span>
                <button id="btnLogin">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
            </div>
        </nav>
    </header>

    <!-- POPUP LAYER (‡∏ó‡∏∏‡∏Å feature ‡πÄ‡∏õ‡πá‡∏ô popup ‡πÑ‡∏°‡πà reload ‡∏´‡∏ô‡πâ‡∏≤/‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô) -->
    <div id="popupLayer"></div>

    <!-- MAIN BATTLE FIELD (‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡∏°/‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå/auto battle) -->
    <main id="mainBattlefield" class="hide">
        <section class="battlefield">
            <!-- PLAYER TEAM (4 ‡πÉ‡∏ö) -->
            <div class="card-row user">
                <!-- card generation by JS -->
            </div>
            <!-- MONSTER TEAM (4 ‡πÉ‡∏ö) -->
            <div class="card-row monster">
                <!-- card generation by JS -->
            </div>
            <!-- SPD BARS -->
            <div class="spd-bar-container">
                <!-- generated by JS -->
            </div>
        </section>
        <section class="battle-controls">
            <button id="btnStartAuto" class="primary-btn">Auto Battle</button>
            <button id="btnBack" class="secondary-btn">‡∏Å‡∏•‡∏±‡∏ö</button>
        </section>
    </main>

    <!-- FOOTER -->
    <footer>
        <small style="color: #aaa;">&copy; 2024 - Epic Seven Fan Project Demo Frontend</small>
    </footer>

    <!-- JS -->
    <script src="js/ui.js"></script>
    <script src="js/team.js"></script>
    <script src="js/battle.js"></script>
    <script src="js/ai.js"></script>
    <script src="js/animationEngine.js"></script>
    <script src="js/effect.js"></script>
    <script src="js/result.js"></script>
    <script src="js/popupManager.js"></script>
    <script src="js/inventory.js"></script>
    <script src="js/upgrade.js"></script>
    <script src="js/rune.js"></script>
    <script src="js/gacha.js"></script>
    <script src="js/quest.js"></script>
    <script src="js/stage.js"></script>
    <script src="js/shop.js"></script>
    <script src="js/announcement.js"></script>
    <script src="js/redeem.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/characterCollection.js"></script>
    <script src="js/passive.js"></script>
    <script src="js/chat.js"></script>
    <script src="js/gachaLog.js"></script>
    <script src="js/energy.js"></script>
    <script src="js/localization.js"></script>
</body>
</html>

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js\ui.js
// js/ui.js
document.addEventListener('DOMContentLoaded', () => {
    // Menu button event mapping: [btnId, popupId or function]
    const menuActions = {
        btnTeam: () => openPopup('team'),
        btnBattle: () => {
            document.getElementById('mainBattlefield').classList.remove('hide');
            closePopup();
        },
        btnInventory: () => openPopup('inventory'),
        btnQuest: () => openPopup('quest'),
        btnShop: () => openPopup('shop'),
        btnGacha: () => openPopup('gacha'),
        btnCharacter: () => openPopup('characterCollection'),
        btnAnnouncement: () => openPopup('announcement'),
        btnChat: () => openPopup('chat'),
        btnLogin: () => openPopup('login'),
    };

    Object.entries(menuActions).forEach(([btnId, action]) => {
        const btn = document.getElementById(btnId);
        if (btn) btn.addEventListener('click', action);
    });

    // Popup Layer logic
    window.openPopup = function(type, data = {}) {
        const popupLayer = document.getElementById('popupLayer');
        popupLayer.innerHTML = renderPopup(type, data);
        popupLayer.classList.add('active');
    };

    // Close popup
    window.closePopup = function() {
        const popupLayer = document.getElementById('popupLayer');
        popupLayer.innerHTML = '';
        popupLayer.classList.remove('active');
    };

    // Render central popup UI (type: string, data: Object)
    function renderPopup(type, data) {
        // Popup templates for each feature
        const templates = {
            team: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°</h2><div id="teamEditArea"></div></div>`,
            inventory: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°</h2><div id="inventoryArea"></div></div>`,
            quest: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡πÄ‡∏Ñ‡∏ß‡∏™‡∏ï‡πå</h2><div id="questArea"></div></div>`,
            shop: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</h2><div id="shopArea"></div></div>`,
            gacha: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏Å‡∏≤‡∏ä‡∏≤</h2><div id="gachaArea"></div></div>`,
            characterCollection: `<div class="popup"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£</h2><div id="characterArea"></div></div>`,
            announcement: `<div class="popup large"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®</h2><div id="announcementArea"></div></div>`,
            chat: `<div class="popup tall"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡πÅ‡∏ä‡∏ó</h2><div id="chatArea"></div></div>`,
            login: `<div class="popup small"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
                <input id="userId" placeholder="User ID" /><input id="userPass" type="password" placeholder="Password" />
                <button id="doLoginBtn">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
                <div id="loginHint"></div>
                </div>`,
        };
        if (!templates[type]) return '<div class="popup"><button class="close" onclick="closePopup()">√ó</button><p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö</p></div>';
        return templates[type];
    }

    // Escape popup with ESC key
    document.addEventListener('keyup', (ev) => {
        if (ev.key === 'Escape') closePopup();
    });

    // Hide battlefield when clicking "Back"
    const btnBack = document.getElementById('btnBack');
    if (btnBack) btnBack.addEventListener('click', () => {
        document.getElementById('mainBattlefield').classList.add('hide');
    });

    // Responsive popup layer CSS logic (for .active popup display)
    // (Style in css/style.css, eg. for .popup, .popup.large, .popup.tall, etc.)

    // Helper: show player name if logged in
    window.setPlayerName = function(name) {
        document.getElementById('playerName').textContent = name || '';
    };

    // Helper: trigger noti dot (menu) if new message (ex. quest, announcement)
    window.setMenuNoti = function(btnId, show) {
        const btn = document.getElementById(btnId);
        if (btn) {
            if (show) btn.classList.add('noti');
            else btn.classList.remove('noti');
        }
    };

    // Helper: clear all popup
    window.clearAllPopup = closePopup;
});

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå css\style.css
/* Main color theme */
:root {
  --dark-bg: #191c21;
  --panel-bg: #23242a;
  --pop-bg: #1d2230;
  --accent: #3fa8ff;
  --accent2: #ff6565;
  --secondary: #e6f1ff;
  --border: #33364a;
  --card-bg: #25293c;
  --font-main: 'Prompt', 'Sarabun', Arial, sans-serif;
}

body,
html {
  margin: 0;
  padding: 0;
  background: var(--dark-bg);
  color: var(--secondary);
  font-family: var(--font-main);
  font-size: 17px;
  transition: background 0.2s;
  height: 100%;
  min-height: 100vh;
}
.dark-bg {
  background: var(--dark-bg)!important;
}

header, nav {
  width: 100vw;
  background: var(--panel-bg);
  position: sticky; top: 0;
  z-index: 40;
}

.navbar {
  display: flex; justify-content: space-between;
  align-items: center; padding: 0.3em 3vw;
}
.logo {
  font-weight: bold;
  font-size: 1.2em;
  letter-spacing: 1px;
  color: var(--accent);
}
.menu {
  list-style: none; display: flex; align-items: center; gap: .6em;
  margin: 0; padding: 0;
}
.menu li button {
  background: transparent; border: none; color: var(--secondary);
  font-size: 1em; padding: .45em 1em;
  border-radius: 30px; cursor: pointer;
  transition: background .14s;
  position: relative;
}
.menu li button.noti::after {
  content: "";
  background: var(--accent2);
  width: 10px; height: 10px;
  border-radius:100%; position: absolute;
  top: .3em; right: .7em;
  box-shadow: 0 0 6px 3px #ffabab77;
}

.menu li button:hover,
.menu li button:focus {
  background: #2c2e39;
  color: var(--accent);
}
.profile { display: flex; align-items: center; gap: 1em; }
#playerName { font-weight: 600; }
.hide { display: none!important; }


/* ========== MAIN BATTLEFIELD ========== */
main#mainBattlefield {
  max-width: 1180px;
  margin: 1.3em auto 0 auto;
  background: var(--panel-bg);
  border-radius: 15px;
  box-shadow: 0 2px 50px #0004;
  padding: 1.2em .5em 1.5em .5em;
  min-height: 430px;
  display: block;
  transition: all .18s;
}
.battlefield {
  position: relative;
  width: 100%;
  min-height: 320px;
  background: linear-gradient(0deg, #202639 80%, #1a222e 100%);
  border-radius: 16px;
  margin: 0 auto 10px auto; 
  box-shadow: 0 0 35px 10px #04071c30 inset;
  overflow: hidden;
  padding: 1em 0;
}
.card-row {
  display: flex;
  justify-content: space-evenly;
  align-items: flex-end;
  margin: 0.4em auto;
  gap: 13px;
  min-height: 130px;
  z-index: 2;
  position: relative;
}

/* User's team on top, monsters below */
.card-row.user { margin-bottom: 46px; }
.card-row.monster { margin-bottom: 18px; }

.spd-bar-container {
  position: absolute; width: 100%;
  left: 0; top: 48%;
  transform: translateY(-50%);
  display: flex; justify-content: center;
  gap: 24px; pointer-events: none;
  z-index: 3;
}
.spd-bar {
  width: 90px; height: 8px;
  background: #303742;
  border-radius: 6px;
  margin-bottom: 3px;
  overflow: hidden;
  box-shadow: 0 2px 8px #0006 inset;
}
.spd-bar-fill {
  background: linear-gradient(90deg, var(--accent), #9be7ff 70%);
  height: 100%; border-radius: 6px;
  transition: width 0.23s;
}

.battle-controls {
  display: flex; justify-content: center;
  gap: 30px; padding: 1.2em 0;
}
.primary-btn, .secondary-btn {
  background: var(--accent);
  border: none;
  color: #fff;
  font-size: 1.04em;
  font-weight: bold;
  padding: .65em 2.2em;
  border-radius: 35px;
  cursor: pointer;
  letter-spacing: .05em;
  box-shadow: 0 2px 8px #41a5f68e;
  margin-bottom: .4em;
  transition: all .14s;
}
.primary-btn:hover { background: #135488;}
.secondary-btn {
  background: #373958; color: #ccd9ef; box-shadow: none;
}
.secondary-btn:hover { background: #29304b; color: #fff; }

/* CARD STYLE - for hero & monster */
.card {
  background: var(--card-bg);
  border-radius: 15px;
  box-shadow: 0 0 8px 1px #23294a78, 0 1px 0 #3fa8ff2a;
  width: 116px; min-height: 136px;
  position: relative;
  display: flex; flex-direction: column;
  align-items: center; justify-content: flex-end;
  transition: transform .16s;
  overflow: visible;
  border: 2px solid #1d2238;
}
.card .hero-img, .card .mon-img {
  width: 75px; height: 75px;
  border-radius: 50%;
  margin-top: 17px;
  background: #13131c;
  object-fit: cover; object-position: center;
  outline: 3px solid var(--accent);
  box-shadow: 0 0 12px #3fa8ff33;
}
.card .statbar {
  width: 85%; height: 8px;
  border-radius: 5px;
  margin: 5px auto 5px auto;
  background: #171c2d;
  box-shadow: 0 1px 8px #0006 inset;
  overflow: hidden;
}
.card .hp-fill {
  background: linear-gradient(90deg, #55dcab, #4e93f1 80%);
  height: 100%; border-radius: 3px;
  transition: width 0.27s;
}
.card .name {
  font-size: .98em; font-weight: bold; margin-top: 7px;
  text-shadow: 0 2px 9px #0008;
  color: #fff;
  letter-spacing: .03em;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 95px;
  text-align: center;
}
.card .damage-popup {
  position: absolute;
  left: 60%; top: 23%;
  font-size: 1.15em;
  color: var(--accent2);
  font-weight: bold;
  transform: translate(-50%, -60%) scale(1.05);
  opacity: 0;
  pointer-events: none;
  animation: damageJump .7s cubic-bezier(.5,-1, .2, 1.8) 1;
}

@keyframes damageJump {
  0%   { opacity: 0; transform: translate(-50%, -80%) scale(0.7);}
  21%  { opacity: 1; transform: translate(-50%, -120%) scale(1.2);}
  69%  { opacity: 1; transform: translate(-50%, -115%) scale(1.0);}
  100% { opacity: 0; transform: translate(-50%,-70%) scale(.60);}
}

/* Buff & debuff icon overlay on card */
.card .stat-icons {
  display: flex; flex-wrap: wrap;
  gap: 1px; margin-bottom: 4px; justify-content: center;
}
.card .stat-icon {
  width: 18px; height: 18px; border-radius: 50%;
  background: #232c48; border: 2px solid #6ad2ff77;
  display: flex; align-items: center; justify-content: center;
  font-size: 1em; margin-left: 1px;
  box-shadow: 0 0 5px #0088ffc9;
  position: relative;
  cursor: pointer;
}
.card .stat-icon.buff { border-color: #15ef92; }
.card .stat-icon.debuff { border-color: #eb5454; }

/* Tooltip */
.tooltip {
  position: absolute;
  left: 50%; bottom: 120%; z-index: 24;
  background: #22253c;
  color: #daf5ff;
  padding: 4px 12px;
  border-radius: 8px;
  font-size: .90em; min-width: 87px; max-width: 200px;
  box-shadow: 0 8px 25px #0079ff41;
  pointer-events: none; opacity: 0; transition: all .12s;
}
.stat-icon:hover .tooltip { opacity: 1; }

/* ========== POPUPS ========== */
#popupLayer {
  position: fixed;
  top:0; left:0; z-index: 99;
  width:100vw; height:100vh;
  display:flex; align-items:center; justify-content:center;
  background: #050925d8;
  pointer-events: none;
  opacity: 0;
  transition: opacity .18s;
}
#popupLayer.active {
  pointer-events: all; opacity: 1;
}
.popup {
  background: var(--pop-bg);
  border-radius: 18px;
  padding: 2em 1.5em 1.5em 1.5em;
  box-shadow: 0 0 80px #3138aa51, 0 1px 13px #49d9ff1b;
  min-width: 340px;
  min-height: 120px;
  max-width: 99vw;
  max-height: 90vh;
  overflow-y: auto;
  color: #fff;
  position: relative;
  animation: popupOpen .25s cubic-bezier(.7,0, .09,1.55);
}
@keyframes popupOpen {
 0% { transform: scale(.82) translateY(50px) rotate(-7deg);}
 100%{ transform: scale(1) translateY(0);}
}
.popup.large { min-width: 700px; max-width: 99vw; min-height: 340px;}
.popup.tall { min-height: 390px; max-width: 550px;}
.popup.small { min-width: 260px;max-width:327px;}

.popup .close {
  position:absolute;
  top:10px; right: 10px;
  background: #293e69;
  color: #dff6fc;
  border:none; font-size:1.45em;
  width:30px; height:30px;
  border-radius:100%; cursor:pointer;
  opacity: .85;
  z-index: 5;
  transition: background .15s;
}
.popup .close:hover { background: var(--accent2); color: #fff; }

/* Pop-up area blocks (for slot areas) */
#teamEditArea, #questArea, #gachaArea, #characterArea, #announcementArea,
#chatArea, #shopArea, #inventoryArea { margin: 16px 0 0 0;}

/* Input Buttons/Fields */
input, select, textarea {
  background: #1e2532;
  border: 2px solid #314a6a;
  color: #eee;
  padding: 9px 14px;
  border-radius: 9px;
  font-size: 1em; outline: none;
  margin: 5px 0;
  box-shadow: 0 2px 8px #0067ad20;
  transition: border .13s;
}
input:focus { border:2px solid var(--accent);}
input[type="password"] { letter-spacing: .2em; }

button:focus { outline: 2px solid var(--accent);}
button:active { filter: brightness(.93);}
::-webkit-scrollbar { width: 9px; background: #233;}
::-webkit-scrollbar-thumb { background: #303860; border-radius: 7px; box-shadow: 0 2px 12px #152a;}

/* Footer */
footer {
  margin: 0;
  background: #141520;
  color: #c9d1e6bb;
  text-align: center;
  font-size: .96em;
  padding: 16px 0 11px 0;
}

/* ========== RESPONSIVE DESIGN ========== */
@media (max-width: 750px) {
  .battlefield { min-height: 240px; }
  .card { width: 81px; min-height: 82px; }
  .card .hero-img, .card .mon-img { width: 52px; height: 52px;}
  .popup.large { min-width: 97vw;}
  .popup.tall { min-width: 97vw;}
  main#mainBattlefield { padding: .51em 0; border-radius: 6px;}
  .navbar { flex-direction:column; gap:.5em;}
  .menu { flex-wrap: wrap; gap: .19em 1em; margin-bottom:.3em;}
}

@media (max-width: 540px) {
  .card { width: 66px; }
  .popup { padding:1em .65em .8em .65em; }
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/char/astra.json
{
  "id": "astra",
  "type": "hero",
  "name": "Astra",
  "element": "water",
  "class": "knight",
  "rarity": 5,
  "star": 5,
  "level": 1,
  "level_max": 50,
  "exp": 0,
  "exp_max": 600,
  "hp": 1064,
  "atk": 116,
  "def": 273,
  "spd": 100,
  "crit_rate": 15,
  "crit_dmg": 150,
  "effectiveness": 0,
  "resistance": 20,
  "skills": [
    {
      "id": "astra_s1",
      "name": "Sword Slash",
      "type": "attack",
      "desc": "‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 1 ‡∏ï‡∏±‡∏ß ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ï‡∏¥‡∏î [def break] 1 ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô",
      "multiplier": 1.02,
      "effect": {
        "debuff": [
          { "type": "def_break", "turn": 1, "chance": 35 }
        ]
      },
      "cooldown": 0
    },
    {
      "id": "astra_s2",
      "name": "Guardian Blessing",
      "type": "buff",
      "desc": "‡πÄ‡∏û‡∏¥‡πà‡∏° DEF‡πÉ‡∏´‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏µ‡∏° 2 ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô",
      "multiplier": 0,
      "effect": {
        "buff": [
          { "type": "def_up", "turn": 2 }
        ]
      },
      "cooldown": 3
    },
    {
      "id": "astra_s3",
      "name": "Aegis Pierce",
      "type": "attack",
      "desc": "‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏´‡∏°‡∏π‡πà ‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ï‡∏¥‡∏î stunned 1 ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô",
      "multiplier": 1.7,
      "effect": {
        "debuff": [
          { "type": "stun", "turn": 1, "chance": 50 }
        ]
      },
      "cooldown": 5
    }
  ],
  "passive": "astra_passive",
  "img": "astra.png"
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/char/slime_basic.json
{
  "id": "slime_basic",
  "type": "monster",
  "name": "Slime (Basic)",
  "element": "earth",
  "class": "monster",
  "rarity": 1,
  "level": 1,
  "level_max": 20,
  "exp": 0,
  "exp_max": 100,
  "hp": 240,
  "atk": 48,
  "def": 24,
  "spd": 70,
  "crit_rate": 0,
  "crit_dmg": 120,
  "effectiveness": 0,
  "resistance": 0,
  "skills": [
    {
      "id": "slime_s1",
      "name": "Bodyslam",
      "type": "attack",
      "desc": "‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏î‡∏µ‡∏¢‡∏ß",
      "multiplier": 1.1,
      "effect": {},
      "cooldown": 0
    }
  ],
  "img": "slime_basic.png"
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå team.html
<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>Epic Seven - ‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°</title>
    <link rel="stylesheet" href="css/style.css" />
</head>
<body class="dark-bg">

<header>
    <nav class="navbar">
        <div class="logo">EPIC Seven - Card Battle</div>
        <ul class="menu">
            <li><button onclick="window.location.href='index.html'">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</button></li>
            <li><button onclick="window.location.href='team.html'" class="noti">‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°</button></li>
            <li><button id="btnBack">‡∏Å‡∏•‡∏±‡∏ö</button></li>
        </ul>
        <div class="profile">
            <span id="playerName"></span>
            <button id="btnLogin">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
        </div>
    </nav>
</header>

<main id="mainTeamSetup" style="max-width: 1000px; margin:20px auto;background:var(--panel-bg);border-radius:12px;box-shadow:0 1px 20px #0006;padding:26px 8px;">
    <h2 style="margin-bottom:0.8em;">‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ</h2>
    <div class="team-section">
        <h3>‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 4 ‡∏ï‡∏±‡∏ß)</h3>
        <div id="teamSlotBar" class="card-row user"></div>
        <button class="primary-btn" id="btnSaveTeam" style="margin-top:18px;">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏°</button>
    </div>
    <hr style="margin: 32px 0 18px 0; border:1px solid var(--border);">
    <h4>‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ (‡∏•‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°)</h4>
    <div id="charCollection" class="card-row" style="flex-wrap:wrap; gap:15px 8px; justify-content:flex-start;"></div>
</main>

<div id="popupLayer"></div>

<footer>
    <small style="color: #aaa;">&copy; 2024 - Epic Seven Fan Project Demo Frontend</small>
</footer>

<script src="js/ui.js"></script>
<script src="js/team.js"></script>
</body>
</html>

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/team.js
// js/team.js

const maxTeam = 4;

let allChars = [];   // ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏°‡∏µ
let team = [];       // id ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

/**
 * ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå (mock: as static, ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡∏î‡∏±‡∏Å‡∏ä‡∏±‡∏ô fetch ‡∏à‡∏£‡∏¥‡∏á)
 */
async function loadCharacters() {
    // ‡∏™‡∏°‡∏°‡∏ï‡∏¥ user ‡∏°‡∏µ asra ‡∏Å‡∏±‡∏ö slime_basic (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
    let charIds = ['astra', 'slime_basic'];
    let res = await Promise.all(
        charIds.map(id => fetch(`data/char/${id}.json`).then(r => r.json()))
    );
    allChars = res;
}

/**
 * ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡∏°‡∏à‡∏≤‡∏Å LocalStorage
 */
function loadTeam() {
    let t = localStorage.getItem('userTeam');
    if (!t) team = [];
    else team = JSON.parse(t);
}

/**
 * ‡πÄ‡∏ã‡∏ü‡∏ó‡∏µ‡∏°‡∏•‡∏á LocalStorage
 */
function saveTeam() {
    const cleanTeam = team.filter(id => !!id); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏Å‡∏£‡∏≠‡∏á id ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    localStorage.setItem('userTeam', JSON.stringify(cleanTeam)); // ‡πÉ‡∏ä‡πâ cleanTeam
    alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
}

/**
 * render UI slot ‡∏ó‡∏µ‡∏° (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 4)
 */
function renderTeamBar() {
    const el = document.getElementById('teamSlotBar');
    if (!el) return; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ element ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
    el.innerHTML = '';
    for (let i = 0; i < maxTeam; i++) {
        let char = allChars.find(c=>c.id===team[i]);
        let slot = document.createElement('div');
        slot.className = 'card';
        slot.style.minHeight = "140px";
        slot.dataset.idx = i;
        if (char) {
            slot.innerHTML = `
                <img src="img/char/${char.img}" class="hero-img" alt="${char.name}">
                <div class="name">${char.name}</div>
                <button class="primary-btn" style="margin:7px 0 4px 0;font-size:.93em;" onclick="removeFromTeam(${i})">‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å</button>
            `;
        } else {
            slot.innerHTML = `<div style="opacity:.44;margin-top:30px;text-align:center;">‡∏ß‡πà‡∏≤‡∏á</div>`;
            slot.style.background = '#262a39b2';
        }
        el.appendChild(slot);
    }
}

/**
 * render ‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å allChars ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function renderCharCollection() {
    const el = document.getElementById('charCollection');
    if (!el) return; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ element ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
    el.innerHTML = '';
    allChars.forEach(c => {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏•‡∏≤‡∏Å‡∏ã‡πâ‡∏≥
        let inTeam = team.includes(c.id);
        let div = document.createElement('div');
        div.className = 'card';
        div.draggable = !inTeam;
        div.style.opacity = inTeam ? '.34' : '1.0';
        div.style.cursor = inTeam ? "not-allowed" : "grab";
        div.innerHTML = `
            <img src="img/char/${c.img}" class="hero-img" alt="${c.name}" >
            <div class="name">${c.name}</div>
            <div style="font-size:.92em;margin-bottom:3px;">Lv.${c.level} &nbsp; <small class="stat-bar">${c.hp} HP</small></div>
        `;
        // Popover info
        div.addEventListener('click', e=>{
            openCharInfoPopup(c);
        });
        // Drag: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏™‡πà‡∏ó‡∏µ‡∏°
        div.addEventListener('dragstart', ev=>{
            ev.dataTransfer.setData("text/plain", c.id);
        });
        el.appendChild(div);
    });
    // ‡∏ó‡∏µ‡∏°‡∏£‡∏±‡∏ö event drop
    const teamSlots = document.querySelectorAll('#teamSlotBar .card');
    teamSlots.forEach(slot=>{
        slot.ondragover = e=>{e.preventDefault(); slot.style.borderColor='#49cfffa8';}
        slot.ondragleave = e=>{slot.style.borderColor='';}
        slot.ondrop = function(e){
            e.preventDefault();
            let dragId = e.dataTransfer.getData("text/plain");
            let idx = Number(slot.dataset.idx);
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏ã‡πâ‡∏≥
            if (team.includes(dragId)) return;
            team[idx] = dragId;
            saveTeam();
            renderTeamBar();
            renderCharCollection();
        }
    });
}

/**
 * Remove ‡∏ï‡∏±‡∏ß‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°
 */
window.removeFromTeam = function(idx){
    team[idx] = undefined;
    renderTeamBar(); renderCharCollection();
}

/**
 * Pop-up info ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
 */
function openCharInfoPopup(char){
    closePopup();
    window.openPopup('charInfo', {char});
}

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏° template popup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
 */
(function(){
    const origRenderPopup = window.renderPopup;
    window.renderPopup = function(type, data){
        if(type=="charInfo" && data && data.char){
            const c = data.char;
            return `<div class="popup" style="min-width:285px;">
                <button class="close" onclick="closePopup()">√ó</button>
                <img src="img/char/${c.img}" class="hero-img" style="margin:auto;display:block;" />
                <div class="name" style="text-align:center;">${c.name}</div>
                <div style="margin-top:8px;font-size:.97em;color:#87cdff;">Lv.${c.level} ‚òÖ${c.star} <span> (${c.class})</span></div>
                <hr style="margin:8px 0 8px 0;border-color:#234;">
                <div><b>HP</b> ${c.hp} &nbsp; <b>ATK</b> ${c.atk} &nbsp; <b>DEF</b> ${c.def}</div>
                <div><b>SPD</b> ${c.spd} &nbsp; <b>CRIT%:</b> ${c.crit_rate}</div>
                <div><b>Skills</b>:</div>
                <ul>${c.skills.map(s=> `<li><b>${s.name}</b>: ${s.desc}</li>`).join('')}</ul>
            </div>`;
        }
        return origRenderPopup(type, data);
    }
})();

/**
 * ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
 */
document.addEventListener('DOMContentLoaded', ()=>{
    const btnSaveTeam = document.getElementById('btnSaveTeam');
    if (btnSaveTeam) btnSaveTeam.onclick = saveTeam; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ element ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
});

/**
 * ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
 */
const btnBack = document.getElementById('btnBack');
if (btnBack) btnBack.onclick = ()=>{ window.location.href = 'index.html'; } // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ element ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠

/**
 * INITIALIZE
 */
(async()=>{
    await loadCharacters();
    loadTeam();
    renderTeamBar();
    renderCharCollection();
})();

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/battle.js
/**
 * js/battle.js
 * Epic Seven Card Auto Battle Main Engine (Frontend 100%)
 * Full Modular, Responsive, AI, Animation, CD, Buff/Debuff, WIN/LOSE Result
 * By (yourname)
 */

/* ------------------ Config & State ------------------ */
const SPD_BAR_MAX = 100;    // SPD bar ‡πÄ‡∏ï‡πá‡∏°
const SPD_FRAME = 120;      // ms ‡∏ï‡πà‡∏≠ tick
const MAX_TEAM = 4, MAX_MON = 4;

let heroes = [];      // ‡∏ù‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (heroes: [{...}])
let monsters = [];    // ‡∏ù‡∏±‡πà‡∏á‡∏®‡∏±‡∏ï‡∏£‡∏π (monsters: [{...}])
let speedBars = [];   // SPD bar + Buff/Debuff refs
let autoOn = false;
let isBattling = false;

/* ------------------ 1. LOAD TEAM & ENEMY ------------------ */
async function loadBattleTeams() {
    // Load User Team
    let t = localStorage.getItem('userTeam');
    let myTeam = t ? JSON.parse(t) : [];
    heroes = [];
    for (let id of myTeam) {
        if (!id) continue;
        let c = await fetch(`data/char/${id}.json`).then(r => r.json());
        heroes.push({
            ...deepCopy(c),
            currHp: c.hp,
            alive: true,
            buffs: [],
            debuffs: [],
            cooldowns: Array((c.skills || []).length).fill(0)
        });
    }
    // Load Monsters (Mock: slime_basic N ‡∏ï‡∏±‡∏ß)
    monsters = [];
    for (let i = 0; i < MAX_MON; i++) {
        let c = await fetch(`data/char/slime_basic.json`).then(r => r.json());
        monsters.push({
            ...deepCopy(c),
            id: c.id + '_' + (i+1),
            currHp: c.hp,
            alive: true,
            buffs: [],
            debuffs: [],
            cooldowns: Array((c.skills || []).length).fill(0)
        });
    }
}

/* ------------------ 2. SPD BAR INIT ------------------ */
function initSpdBar() {
    speedBars = [];
    heroes.forEach((c, i) => {
        speedBars.push(makeSpeedObj(c, i, 'hero'));
        c.index = i; c.side = 'hero'; // Weak ref.
    });
    monsters.forEach((c, i) => {
        speedBars.push(makeSpeedObj(c, i, 'mon'));
        c.index = i; c.side = 'mon';
    });
}
function makeSpeedObj(c, i, side) {
    return {
        id: `${side}${i}`,
        side,
        name: c.name,
        spd: c.spd,
        charge: 0,
        dead: false,
        index: i,
        cooldowns: c.cooldowns,
        buffs: c.buffs,
        debuffs: c.debuffs
    };
}

/* ------------------ 3. RENDER FIELD ------------------ */
function renderBattlefield() {
    const heroRow = document.querySelector('.card-row.user');
    heroRow.innerHTML = '';
    heroes.forEach((c, idx) => {
        heroRow.appendChild(renderCard(c, idx, 'hero'));
    });
    const monRow = document.querySelector('.card-row.monster');
    monRow.innerHTML = '';
    monsters.forEach((c, idx) => {
        monRow.appendChild(renderCard(c, idx, 'mon'));
    });
    // SPD Bars
    const spdDiv = document.querySelector('.spd-bar-container');
    spdDiv.innerHTML = '';
    speedBars.forEach(bar => {
        let barWrap = document.createElement('div');
        barWrap.className = 'spd-bar';
        barWrap.title = `[${bar.side === 'hero' ? '‡∏ó‡∏µ‡∏°‡πÄ‡∏£‡∏≤':'‡∏®‡∏±‡∏ï‡∏£‡∏π'}] ${bar.name} SPD:${bar.spd}`;
        let fill = document.createElement('div');
        fill.className = 'spd-bar-fill';
        fill.style.width = Math.floor(Math.min(bar.charge, SPD_BAR_MAX)/SPD_BAR_MAX*100) + '%';
        barWrap.appendChild(fill);
        spdDiv.appendChild(barWrap);
    });
}

/* ------------------ CARD DISPLAY utils ------------------ */
function renderCard(c, idx, side='hero') {
    let d = document.createElement('div');
    d.className = 'card'; d.id = `${side}${idx}`;
    d.setAttribute('data-idx', idx);
    d.setAttribute('data-side', side);

    // Image
    let img = document.createElement('img');
    img.className = side == 'hero' ? 'hero-img' : 'mon-img';
    img.src = `img/char/${c.img}`;
    img.alt = c.name;
    d.appendChild(img);
    // Name
    d.appendChild(createDiv('name', c.name));

    // HP BAR
    let statbar = document.createElement('div');
    statbar.className = 'statbar';
    let hpfill = document.createElement('div');
    hpfill.className = 'hp-fill';
    let hppercent = Math.max(0, Math.min(1, c.currHp/c.hp));
    hpfill.style.width = (hppercent*100) + '%';
    statbar.appendChild(hpfill);
    d.appendChild(statbar);

    // Buff/Debuff
    let statIcons = document.createElement('div');
    statIcons.className = 'stat-icons';
    (c.buffs||[]).forEach(b => statIcons.appendChild(renderStatusIcon(b, 'buff')));
    (c.debuffs||[]).forEach(dbb => statIcons.appendChild(renderStatusIcon(dbb, 'debuff')));
    d.appendChild(statIcons);

    d.appendChild(createDiv('', `HP ${Math.floor(c.currHp)}/${c.hp} SPD:${c.spd}`, {fontSize: ".82em"}));
    return d;
}

function createDiv(cn, txt, styleObj) {
    let d = document.createElement("div");
    if (cn) d.className = cn; d.innerText = txt;
    if (styleObj) Object.assign(d.style, styleObj);
    return d;
}

function renderStatusIcon(stat, type='buff') {
    let e = document.createElement('div');
    e.className = 'stat-icon '+type;
    e.innerHTML = getIcon(stat.type) ;
    e.title = stat.type.toUpperCase() + (stat.turn?" ("+stat.turn+"T)":"");
    let tt = document.createElement('span');
    tt.className = 'tooltip';
    tt.innerText = statusTooltip(stat.type, type, stat);
    e.appendChild(tt);
    if (stat.turn && stat.turn>0) {
        let lbl = document.createElement('small');
        Object.assign(lbl.style,{
            position:'absolute', fontSize:'.79em', fontWeight:'bold',
            right:'2px', bottom:'1px', color: type==='buff'?'#42fcc1':'#ffc3a3'
        });
        lbl.innerText = stat.turn; e.appendChild(lbl);
    }
    return e;
}
function statusTooltip(type, side, details) {
    const lib = {
        'def_break':'DEF ‡∏•‡∏î‡∏•‡∏á ‡∏£‡∏±‡∏ö‡∏î‡∏≤‡πÄ‡∏°‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°','def_up':'DEF ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô',
        'stun':'‡∏ï‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏°‡∏∂‡∏ô, ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô','poison':'‡πÇ‡∏î‡∏ô‡∏û‡∏¥‡∏© (‡∏•‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î)',
        'burn':'‡πÄ‡∏ú‡∏≤‡πÑ‡∏ü (‡∏•‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏´‡∏ô‡∏±‡∏Å)','heal_ot':'‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
        'spd_up':'SPD ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô','spd_down':'SPD ‡∏•‡∏î‡∏•‡∏á',
        'immune':'‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏ö‡∏±‡∏ü','silence':'‡πÉ‡∏ö‡πâ (‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)',
    };
    return (lib[type]||type)+((details.turn)?" ("+details.turn+" turn)":"");
}
function getIcon(type) {
    switch(type){
        case "def_break":return "üõ†Ô∏è"; case "def_up":return "üõ°Ô∏è";
        case "stun":return "üí´"; case "heal_ot":return "üíö";
        case "poison":return "‚ò†Ô∏è"; case "burn":return "üî•";
        case "spd_up":return "üí®"; case "spd_down":return "üê¢";
        case "immune":return "üîí"; case "silence":return "üîá";
        default:return "‚ú®";
    }
}

// Window-wide Damage popup (as UI Function)
window.showDamage = function(idx, side, dmg, color='#ff5656') {
    let c = document.getElementById(`${side}${idx}`);
    if (!c) return;
    let dPop = document.createElement('span');
    dPop.className = 'damage-popup';
    dPop.innerText = (dmg<0?"+":"-")+Math.abs(dmg);
    dPop.style.color=color;
    c.appendChild(dPop);
    setTimeout(()=>{ dPop.remove(); }, 700);
};

/* ------------------ 4. SPD BAR LOOP & TURN SYSTEM------------------ */
function startBattle() {
    if (isBattling) return; isBattling = true; autoOn = true;
    async function battleLoop(){
        while(isBattling){
            for(let bar of speedBars){
                if(bar.dead) continue;
                // Refs
                let charArr = bar.side=='hero' ? heroes : monsters;
                let charPtr = charArr[bar.index];
                // 1. Process Buff/Debuff countdown&effects (HoT/Poison)
                window.effectEngine?.processStatusTurn?.(charPtr);
                if(charPtr.currHp<=0){ charPtr.alive=false; bar.dead=true; continue; }
                if(window.effectEngine?.isStunnedOrSkipped?.(charPtr)){
                    bar.cooldowns.forEach((v,i,arr)=>{ if(arr[i]>0) arr[i]--; });
                    continue;
                }
                if(!charPtr.alive) continue;
                // SPD charge
                bar.charge += getSpdCharge(bar);
                if(bar.charge >= SPD_BAR_MAX){
                    bar.charge = 0;
                    await doTurn(bar); // AI turn+animate+action
                    renderBattlefield(); // Render after turn
                    break; // sync (1 at a time)
                }
            }
            checkBattleResult();
            renderBattlefield();
            await (window.animationEngine?.sleep ?
                window.animationEngine.sleep(SPD_FRAME) :
                new Promise(r=>setTimeout(r, SPD_FRAME)));
        }
    }
    battleLoop();
}
function getSpdCharge(bar){
    let spdVal = bar.spd;
    let bonus = 1.0;
    if(bar.buffs?.some(b=>b.type=="spd_up")) bonus += 0.3;
    if(bar.debuffs?.some(b=>b.type=="spd_down")) bonus -= 0.3;
    return spdVal/10 * bonus;
}

/* ------------------ 5. TURN: AI ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢/‡∏™‡∏Å‡∏¥‡∏• & Animation ------------------ */
async function doTurn(bar){
    let charArr = bar.side=='hero'?heroes:monsters;
    let oppArr = bar.side=='hero'?monsters:heroes;
    let idx = bar.index;
    let charPtr = charArr[idx];

    window.effectEngine?.processStatusTurn?.(charPtr);
    if(window.effectEngine?.isStunnedOrSkipped?.(charPtr)){
        bar.cooldowns.forEach((v,i,arr)=>{ if(arr[i]>0) arr[i]--; });
        return;
    }
    if(!charPtr.alive) return;

    // --- PICK SKILL (AI) ---
    let skill = window.aiPickSkill ? window.aiPickSkill(charPtr, bar.cooldowns, charArr, oppArr) : pickSkill(charPtr, bar);

    // --- PICK TARGET
    let targets = [];
    if(skill.type==='attack')
        targets = [window.aiPickTarget ? window.aiPickTarget(oppArr, skill) : aiPickTarget(oppArr, skill)];
    else if(skill.type==='buff')
        targets = charArr.filter(c=>c.alive);
    else if(skill.type==='heal')
        targets = [window.aiPickTarget ? window.aiPickTarget(charArr, skill) : aiPickTarget(charArr, skill)];
    else if(skill.type==='aoe' || (skill.type==='attack' && skill.multiplier>1.2)) // AoE
        targets = oppArr.filter(o=>o.alive);
    else
        targets = [window.aiPickTarget ? window.aiPickTarget(oppArr, skill) : aiPickTarget(oppArr, skill)];
    targets = targets.filter(Boolean);

    // --- Animation Section ---
    // Card slide / AOE / Buff / Heal
    if(skill.type==='attack' && targets[0]){
        let tidx = oppArr.indexOf(targets[0]);
        await window.animationEngine?.animateAttackCard?.(idx, tidx, bar.side, bar.side==='hero'?'mon':'hero');
    }
    if((skill.type==='aoe' || (skill.type==='attack' && skill.multiplier>1.2 && targets.length>1))) {
        let tgtIdxArr = targets.map(t=>oppArr.indexOf(t));
        await window.animationEngine?.animateAoEAttack?.(idx, bar.side, bar.side==='hero'?'mon':'hero', tgtIdxArr);
    }
    if(skill.type==='heal'){
        await window.animationEngine?.animateHeal?.(idx, bar.side);
    }
    if(skill.type==='buff'){
        await window.animationEngine?.animateBuffDebuff?.(idx, bar.side, "buff");
    }

    // --- APPLY SKILL ---
    await doSkill(charPtr, skill, targets, bar.side);

    // --- Increase Cooldown ---
    if(skill.cooldown)
        bar.cooldowns[charPtr.skills.findIndex(s=>s.id==skill.id)] = skill.cooldown+1;
    bar.cooldowns.forEach((v,i,arr)=>{ if(arr[i]>0) arr[i]--; });
}

// Fallback PickSkill, PickTarget ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ai.js
function pickSkill(char, bar){
    let order = [2,1,0];
    for(let i of order){
        if(!char.skills[i]) continue;
        if(bar.cooldowns[i]<=0) return char.skills[i];
    }
    return char.skills[0];
}
function aiPickTarget(arr, skill=null){
    // Heal: lowest HP, Buff: first, Default: hp lowest enemy
    arr = arr.filter(c=>c.alive);
    if(skill && skill.type==="heal")
        return arr.sort((a,b)=>a.currHp/a.hp - b.currHp/b.hp)[0];
    if(skill && skill.type==="buff") return arr[0];
    return arr.sort((a,b)=>a.currHp - b.currHp)[0];
}

/* ------------------ 6. Apply Damage/Effect ------------------ */
async function doSkill(source, skill, targets, sourceSide){
    if(!targets) return;
    for(let t of targets){
        if(!t.alive) continue;
        if(skill.type=="heal"){
            let healVal = Math.floor(source.atk * 0.7 + source.level * 1.5);
            t.currHp = Math.min(t.hp, t.currHp + healVal);
            window.showDamage?.(t.index, t.side, -healVal, '#59f495');
            t.alive = t.currHp>0;
            continue;
        }
        if(skill.type=="buff" && skill.effect && skill.effect.buff){
            window.effectEngine?.addEffect(t, skill.effect.buff, "buff");
            continue;
        }
        // Attack / AoE
        let dmg = Math.floor(source.atk * (skill.multiplier || 1) * (1 + (source.crit_rate || 0) / 100));
        let defReduce = t.debuffs?.some(d=>d.type=="def_break") ? 1.4 : 1;
        let defVal = t.def * defReduce;
        dmg = Math.max(Math.floor(dmg - defVal/3), 1);
        if(Math.random()*100 < (source.crit_rate||0)) dmg = Math.floor(dmg*((source.crit_dmg||150)/100));

        t.currHp = Math.max(0, t.currHp - dmg);
        t.alive = t.currHp>0;
        if(t.currHp<=0) t.alive = false;
        window.showDamage?.(t.index, t.side, dmg, '#ff5656');
        // Debuff
        if(skill.effect?.debuff) {
            window.effectEngine?.addEffect(t, skill.effect.debuff, "debuff");
        }
        // TODO: Cleanse, Remove buff/debuff future
    }
}

/* ------------------ 7. RESULT ------------------ */
function checkBattleResult(){
    let mySurvive = heroes.some(c=>c.alive);
    let monSurvive = monsters.some(c=>c.alive);
    if(!mySurvive || !monSurvive){
        isBattling = false;
        showBattleResult(mySurvive ? 'win' : 'lose');
    }
}
function showBattleResult(state){
    // ‡πÉ‡∏ä‡πâ popupManager ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ (‡∏´‡∏£‡∏∑‡∏≠ renderBattleResult)
    if(window.renderBattleResult){
        window.renderBattleResult({state});
    }else{
        setTimeout(()=>{
            openPopup('battleResult', {state});
        },800);
    }
}

/* ------------------ 8. INIT (START) ------------------ */
document.addEventListener('DOMContentLoaded', ()=>{
    const btnStartAuto = document.getElementById('btnStartAuto');
    if(btnStartAuto)
        btnStartAuto.onclick = async ()=>{
            autoOn = true;
            await loadBattleTeams();
            initSpdBar();
            renderBattlefield();
            startBattle();
        };
    // if battlefield already open
    if(document.getElementById('mainBattlefield') && 
            !document.getElementById('mainBattlefield').classList.contains('hide')) {
        loadBattleTeams().then(() => {
            initSpdBar();
            renderBattlefield();
        });
    }
});

/* ------------------ 9. Utilities ------------------ */
function deepCopy(obj) {
    return JSON.parse(JSON.stringify(obj));
}

/* 
   ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dev/Test ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° UI 
   - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞/‡∏ó‡∏µ‡∏°‡πÉ‡∏´‡∏°‡πà, ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏° debug ‡πÑ‡∏î‡πâ
*/

/* ------------------ 10. Export Global ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ) ------------------ */
window.battleEngine = {
    loadBattleTeams, initSpdBar, renderBattlefield, startBattle, heroes, monsters, speedBars
};

/* ------------------ Custom BattleResult Popup (‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•) ------------------ */
(function () {
    const origRenderPopup = window.renderPopup;
    window.renderPopup = function(type, data) {
        if(type === "battleResult") {
            return `<div class="popup large"><button class="close" onclick="closePopup()">√ó</button>
                <h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ</h2>
                <div style="font-size:2em;text-align:center;margin-bottom:12px;">
                  ${data.state === "win" ? "üèÜ <b style='color:#54e0be'>‡∏ä‡∏ô‡∏∞!</b>" : "‚ùå <b style='color:#f47'>‡πÅ‡∏û‡πâ</b>"}
                </div>
                <button class="primary-btn" onclick="closePopup()">‡πÇ‡∏≠‡πÄ‡∏Ñ</button>
            </div>`;
        }
        return origRenderPopup(type, data);
    };
})();

/* 
 ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
 - ‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á (EXP, ‡∏î‡∏£‡∏≠‡∏õ, ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏û) ‡πÉ‡∏ä‡πâ window.renderBattleResult ‡∏à‡∏≤‡∏Å result.js ‡πÅ‡∏ó‡∏ô
 - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ fallback popup ‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
*/

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/ai.js
// js/ai.js
/**
 * Epic Seven - AI Auto Battle Engine (‡πÅ‡∏¢‡∏Å Module)
 * ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å skill ‡πÅ‡∏•‡∏∞ target ‡πÉ‡∏ô battle.js
 */

/**
 * Pick skill ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏î‡∏¢ AI) - ‡πÅ‡∏ö‡∏ö modular
 * @param {Object} char - (obj) ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
 * @param {Array<number>} cooldowns - cooldown ‡πÅ‡∏ï‡πà‡∏•‡∏∞ skill [s1, s2, s3...]
 * @param {Array<Object>} allies - ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô (obj)
 * @param {Array<Object>} enemies - ‡∏ù‡∏±‡πà‡∏á‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° (obj)
 * @return {Object} skill ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ
 */
function aiPickSkill(char, cooldowns, allies, enemies) {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ö‡∏±‡∏ü, heal, ‡πÉ‡∏ä‡πâ skill aoe ‡∏Å‡πà‡∏≠‡∏ô (‡∏•‡∏≥‡∏î‡∏±‡∏ö: AoE > Heal/Buff > Single)
    // ‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç HP ‡∏ï‡πà‡∏≥, ‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏°‡∏≤‡∏Å/‡∏ô‡πâ‡∏≠‡∏¢, ‡∏´‡∏£‡∏∑‡∏≠ CD climate
    let skills = char.skills || [];
    let usable = skills.map((s, i) => ({...s, cd: cooldowns[i] || 0, idx: i }))
        .filter(s => s.cd === 0);

    // (1) Heal/Buff - ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô usable skill
    for (let s of usable) {
        if (s.type === 'heal' && needHeal(allies)) return s;
        if (s.type === 'buff' && needBuff(allies, s)) return s;
    }

    // (2) AoE - ‡∏ñ‡πâ‡∏≤ AoE ‡πÅ‡∏•‡∏∞‡∏ù‡∏±‡πà‡∏á‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏°‡∏µ 2 ‡∏ï‡∏±‡∏ß+ (‡∏´‡∏£‡∏∑‡∏≠ priority)
    for (let s of usable) {
        if ((s.type === 'attack' || s.type === 'aoe') && s.multiplier > 1.5 && (living(enemies) > 1)) {
            return s;
        }
    }

    // (3) Debuff - ‡∏ï‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ü‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á (def break/stun)
    for (let s of usable) {
        if (s.effect && s.effect.debuff) return s;
    }

    // (4) Single Attack - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å default
    if (usable.length > 0) return usable[0];
    // fallback: skill 1
    return skills[0];
}

/**
 * Pick target ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ (AI)
 * @param {Array<Object>} arr - ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (obj)
 * @param {Object} skill - skill ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ
 * @return {Object}
 */
function aiPickTarget(arr, skill = null) {
    // ‡∏ï‡∏µ‡∏ï‡∏±‡∏ß HP ‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏ß‡πâ‡∏ô‡∏ñ‡πâ‡∏≤ skill ‡πÄ‡∏õ‡πá‡∏ô heal/buff
    arr = arr.filter(c => c.alive);
    // Heal: ‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏£‡∏≤ (lowest HP)
    if (skill && skill.type === 'heal') {
        return arr.sort((a, b) => a.currHp / a.hp - b.currHp / b.hp)[0];
    }
    // Buff: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏£‡∏≤ alive
    if (skill && skill.type === 'buff') {
        // ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà logic   --> ‡πÉ‡∏™‡πà‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å index 0
        return arr[0];
    }
    // AoE: ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏¢
    if (skill && (skill.type === 'aoe' || (skill.type === 'attack' && skill.multiplier > 1.5))) {
        return arr; // ‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ñ‡∏ß enemy
    }
    // Debuff: ‡∏ï‡∏µ tank ‡∏Å‡πà‡∏≠‡∏ô (defense/high HP), ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏ô‡πâ‡∏ô ‡∏´‡∏≤ HP ‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î
    let sorted = arr.sort((a, b) => a.currHp - b.currHp);
    return sorted[0];
}

/**
 * ‡πÉ‡∏Ñ‡∏£‡πÉ‡∏ô‡∏ó‡∏µ‡∏° HP ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 60% ‡πÉ‡∏´‡πâ heal
 * @param {Array<Object>} team
 */
function needHeal(team) {
    for (let c of team) {
        if (c.alive && c.currHp / c.hp < 0.6) return true;
    }
    return false;
}

/**
 * ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ü‡∏ó‡∏µ‡πà skill ‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡πâ‡∏≤‡∏°)
 * @param {Array<Object>} team
 * @param {Object} skill
 */
function needBuff(team, skill) {
    let buffs = (skill && skill.effect && skill.effect.buff) || [];
    for (let btype of buffs.map(b => b.type)) {
        // ‡∏ñ‡πâ‡∏≤ buff ‡∏ô‡∏µ‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏°‡∏î ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ
        let count = team.filter(c => c.alive && c.buffs && c.buffs.some(bf => bf.type === btype)).length;
        if (count < team.length) return true; // ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ buff ‡∏ô‡∏µ‡πâ
    }
    return false;
}

/**
 * ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏≤‡∏¢
 */
function living(arr) {
    return arr ? arr.filter(c => c.alive).length : 0;
}

// ---- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö battle.js ----
// Expose ‡πÄ‡∏õ‡πá‡∏ô global ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ
window.aiPickSkill = aiPickSkill;
window.aiPickTarget = aiPickTarget;

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/animationEngine.js
/* Epic Seven Card Auto Battle - Animation Engine */
/* ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô /js/animationEngine.js */

window.animationEngine = (function () {
    /** Card slide animation to attack */
    async function animateAttackCard(fromIdx, toIdx, fromSide, toSide, type = 'single') {
        const fromCard = document.getElementById(`${fromSide}${fromIdx}`);
        const toCard = document.getElementById(`${toSide}${toIdx}`);
        if (!fromCard || !toCard) return;
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á overlay
        const rectFrom = fromCard.getBoundingClientRect();
        const rectTo = toCard.getBoundingClientRect();
        // Absolute overlay clone
        const clone = fromCard.cloneNode(true);
        clone.style.position = "fixed";
        clone.style.left = rectFrom.left + 'px';
        clone.style.top = rectFrom.top + 'px';
        clone.style.width = rectFrom.width + 'px';
        clone.style.zIndex = "2000";
        clone.style.transition = 'all 0.35s cubic-bezier(.6,0,.2,1.4)';
        // Hide original
        fromCard.style.opacity = "0.4";
        document.body.appendChild(clone);
        await sleep(30);

        // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
        clone.style.left = rectTo.left + 'px';
        clone.style.top = rectTo.top + 'px';
        clone.style.boxShadow = "0 0 32px #e7ff79c8, 0 0 80px #e3e37044";
        clone.style.transform = "scale(1.10) rotate(-3deg)";
        await sleep(330);

        // Flash/Shake ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
        shakeCard(toCard);
        // Remove overlay
        setTimeout(() => {
            clone.remove();
            fromCard.style.opacity = "1";
        }, 110);

        await sleep(180);
    }

    /** AoE Animation (wave blast) */
    async function animateAoEAttack(fromIdx, fromSide, toSide, targets) {
        const fromCard = document.getElementById(`${fromSide}${fromIdx}`);
        if (!fromCard) return;
        // Pulse the card
        pulseCard(fromCard, "#f2d13e");
        // Wave line to center
        targets.forEach((t) => {
            const tgt = document.getElementById(`${toSide}${t}`);
            if (tgt) {
                flashCard(tgt, "#ffd058");
                shakeCard(tgt);
            }
        });
        await sleep(340);
    }

    /** Heal effect (green glow, upward effect) */
    async function animateHeal(toIdx, toSide) {
        const tgt = document.getElementById(`${toSide}${toIdx}`);
        if (!tgt) return;
        glowCard(tgt, "#68eccc");
        // Heal "plus" popup up
        let plus = document.createElement('span');
        plus.textContent = "+HP";
        plus.style = "color:#68fdd8;font-weight:bold;font-size:1.18em;position:absolute;left:42%;top:17%;opacity:0;transition:top .4s,opacity .2s;";
        tgt.appendChild(plus);
        setTimeout(() => {
            plus.style.top = "-6%";
            plus.style.opacity = "1";
        }, 20);
        setTimeout(() => plus.remove(), 650);
        await sleep(390);
    }

    /** Buff/Debuff effect on card */
    async function animateBuffDebuff(toIdx, toSide, type = "buff") {
        const tgt = document.getElementById(`${toSide}${toIdx}`);
        if (!tgt) return;
        glowCard(tgt, type === "buff" ? "#98deff" : "#ff7b7b");
        await sleep(260);
    }

    // --- Utilities (Shake, Glow, Flash, Pulse) ---
    function shakeCard(card) {
        if (!card) return;
        card.animate([
            { transform: "translateX(0)" },
            { transform: "translateX(-12px)" },
            { transform: "translateX(13px)" },
            { transform: "translateX(-7px)" },
            { transform: "translateX(0)" }
        ], { duration: 320, easing: "ease-in" });
    }
    function glowCard(card, color) {
        if (!card) return;
        card.style.boxShadow = `0 0 15px 6px ${color}66`;
        setTimeout(() => (card.style.boxShadow = ""), 380);
    }
    function flashCard(card, color = "#fff") {
        if (!card) return;
        card.style.background = color;
        setTimeout(() => (card.style.background = ""), 170);
    }
    function pulseCard(card, color) {
        if (!card) return;
        card.animate([
            { boxShadow: `0 0 0px 0px ${color}40` },
            { boxShadow: `0 0 15px 8px ${color}bb` },
            { boxShadow: `0 0 0px 0px ${color}00` }
        ], { duration: 410 });
    }
    function sleep(ms) { return new Promise(r => setTimeout(r, ms)); }

    // --- Expose ---

    return {
        animateAttackCard,
        animateAoEAttack,
        animateHeal,
        animateBuffDebuff,
        shakeCard,
        glowCard,
        flashCard,
        pulseCard,
        sleep
    };
})();

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/effect.js
// js/effect.js

/**
 * ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ü/‡∏î‡∏µ‡∏ö‡∏±‡∏ü/‡∏Æ‡∏µ‡∏• Auto Battle Engine (Epic Seven Version)
 * ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: Buff, Debuff, Immunity, Stack, Countdown Turn, Remove, Tooltip
 * ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å battle.js, ai.js, animationEngine.js
 */

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Buff/Debuff) ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö character
 * @param {Object} target - ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
 * @param {Array<Object>} effects - [{type, turn, [chance]}]
 * @param {string} effectType - 'buff' ‡∏´‡∏£‡∏∑‡∏≠ 'debuff'
 */
function addEffect(target, effects, effectType) {
    if (!effects || !Array.isArray(effects)) return;

    for (let eff of effects) {
        // Anti-stack: debuff/buff ‡πÅ‡∏ö‡∏ö non-stack
        if (effectType === "buff") {
            if (target.buffs.some(b => b.type === eff.type)) continue;
        } else if (effectType === "debuff") {
            if (target.debuffs.some(b => b.type === eff.type)) continue;
        }
        // Immunity: ‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏î immunity (multi N turn) ‡∏à‡∏∞‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏ö‡∏±‡∏ü (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô stun/burn ‡∏Ø)
        if (effectType === "debuff" && (target.buffs || []).some(b => b.type === "immune" && b.turn > 0)) {
            continue;
        }
        // Stackable Debuff (‡πÄ‡∏ä‡πà‡∏ô poison) *Option
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ stack ‡πÑ‡∏î‡πâ‡∏´‡∏≤‡∏Å type ‡πÄ‡∏õ‡πá‡∏ô poison/burn
        if (effectType === "debuff" && ["poison", "burn"].includes(eff.type)) {
            target.debuffs.push({...eff});
            continue;
        }
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        if (effectType === "buff") target.buffs.push({...eff});
        else if (effectType === "debuff") target.debuffs.push({...eff});
    }
}

/**
 * ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏° turn ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏î countdown & remove state ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
 * @param {Object} char - ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
 */
function processStatusTurn(char) {
    ['buffs', 'debuffs'].forEach(listType => {
        if (!char[listType]) return;
        for (let i = char[listType].length - 1; i >= 0; i--) {
            let st = char[listType][i];
            // ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô turn
            if (st.turn && st.turn > 0) st.turn--;
            // ‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
            if (st.turn === 0) char[listType].splice(i, 1);
        }
    });
    // Heal Over Time (HoT)/Poison/Burn
    if (char.debuffs) {
        char.debuffs.forEach(df => {
            if (df.type === "poison") {
                let val = Math.round(char.hp * 0.05);
                char.currHp = Math.max(0, char.currHp - val);
                window.showDamage?.(char.index || 0, char.side || 'hero', val, "#ffd155");
            }
            if (df.type === "burn") {
                let val = Math.round(char.hp * 0.12);
                char.currHp = Math.max(0, char.currHp - val);
                window.showDamage?.(char.index || 0, char.side || 'hero', val, "#ff6633");
            }
        });
    }
    if (char.buffs) {
        char.buffs.forEach(bf => {
            if (bf.type === "heal_ot") { // Heal over time
                let val = Math.round(char.hp * 0.06);
                char.currHp = Math.min(char.hp, char.currHp + val);
                window.showDamage?.(char.index || 0, char.side || 'hero', -val, "#24eeba");
            }
        });
    }
}

/**
 * ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏ô Stun ‡∏´‡∏£‡∏∑‡∏≠ Debuff Skip Turn ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */
function isStunnedOrSkipped(char) {
    return (char.debuffs || []).some(df => ["stun", "sleep", "freeze", "silence"].includes(df.type));
}

/**
 * ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ buff/debuff ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Cleanse/Purge) ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î
 * @param {Object} char
 * @param {string} [type] "buff"/"debuff"/"all" (default: all)
 */
function removeStatus(char, type = "all") {
    if (!char) return;
    if (type === "all") {
        char.buffs = [];
        char.debuffs = [];
    }
    if (type === "buff") char.buffs = [];
    if (type === "debuff") char.debuffs = [];
}

/**
 * ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ô UI ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á icon + ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô turn ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ö‡∏ô‡∏™‡∏ô‡∏≤‡∏°
 * (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ UI ‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô char.buffs, char.debuffs [])
 */

/**
 * ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô battle.js:
 * - ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏° turn, processStatusTurn()
 * - check ‡∏ß‡πà‡∏≤ stun/skip turn ‡πÑ‡∏°‡πà‡πÇ‡∏à‡∏°‡∏ï‡∏µ
 * - ‡∏´‡∏•‡∏±‡∏á heal/attack/addEffect ‡πÉ‡∏ä‡πâ addEffect()
 * - ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ removeStatus(char, type)
 */

// ---- Export (global assignment)
window.effectEngine = {
    addEffect,
    processStatusTurn,
    isStunnedOrSkipped,
    removeStatus
};

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/result.js
// js/result.js

/**
 * Epic Seven Auto Battle - Battle Result Handler (Frontend Only)
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup ‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏≠‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï EXP, ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏î‡∏£‡∏≠‡∏õ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•, ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡∏Ø‡∏•‡∏Ø
 * ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° inventory.js, team.js, battle.js, popupManager.js ‡πÅ‡∏•‡∏∞ system ‡∏≠‡∏∑‡πà‡∏ô
 * Author: <yourname> (2024)
 */

// ---------- Option: CONFIGURATION (customize ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πà‡∏≠ database ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï) ----------
const EXP_PER_WIN = 60;     // Exp ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß (‡∏ä‡∏ô‡∏∞)
const EXP_PER_LOSE = 18;    // Exp ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß (‡πÅ‡∏û‡πâ)
const BASIC_DROP_LIST = [
    { id: 'exp_potion', name: 'EXP Potion', qty_range: [1, 2], chance: 55 },
    { id: 'gold', name: 'Gold', qty_range: [200, 500], chance: 80 },
    { id: 'rune_shard', name: 'Rune Shard', qty_range: [1, 1], chance: 20 },
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° drop type ‡πÑ‡∏î‡πâ‡πÉ‡∏ô inventory/item.json
];

// ---------- MAIN FUNCTION ----------
window.renderBattleResult = function (resultObj = {}) {
    // resultObj: { state: 'win'|'lose', heroes: [], monsters: [], drops: [] } (‡∏ö‡∏≤‡∏á field optional)

    // Load user team (reload for update exp)
    let team = [];
    let raw = localStorage.getItem('userTeam');
    if (raw) team = JSON.parse(raw);

    // ‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡∏°‡∏µ id ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏ô team
    let heroDatas = [];
    if (team.length > 0) {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå data/char/*.json
        heroDatas = team.map(id => {
            if (!id) return null;
            try {
                let cache = localStorage.getItem('char_' + id);
                if (cache) return JSON.parse(cache);
            } catch { }
            // Fallback fetch (sync ‡πÇ‡∏õ‡∏£‡∏î‡∏±‡∏Å‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ async ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢ render)
            let obj = null;
            let xhr = new XMLHttpRequest();
            xhr.open('GET', `data/char/${id}.json`, false);
            xhr.send();
            if (xhr.status === 200) {
                obj = JSON.parse(xhr.responseText);
            }
            return obj;
        });
        heroDatas = heroDatas.filter(c => c);
    }

    // 1. EXP/LEVEL UP
    const expGet = (resultObj.state === 'win') ? EXP_PER_WIN : EXP_PER_LOSE;
    let levelUps = [];
    heroDatas.forEach((c, i) => {
        if (!c) return;
        c.exp = (c.exp || 0) + expGet;
        let up = false;
        while (c.exp >= (c.exp_max || 99999)) {
            c.exp -= c.exp_max;
            c.level = (c.level || 1) + 1;
            up = true;
            // ‡∏≠‡∏±‡∏õ cap = ‡πÄ‡∏û‡∏¥‡πà‡∏° exp_max? ‡πÄ‡∏û‡∏¥‡πà‡∏° config ‡πÑ‡∏î‡πâ
        }
        if (up) levelUps.push(c.name);
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å state cache ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ future ‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡πá‡∏ß
        localStorage.setItem('char_' + c.id, JSON.stringify(c));
    });

    // 2. DROP SYSTEM (Mock)
    let dropItems = [];
    if (resultObj.state == 'win') {
        BASIC_DROP_LIST.forEach(d => {
            if (Math.random() * 100 < d.chance) {
                let qty = randomInt(d.qty_range[0], d.qty_range[1]);
                dropItems.push({
                    id: d.id,
                    name: d.name,
                    qty: qty
                });
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                addToInventory(d.id, qty);
            }
        });
    }

    // 3. Save Update ‡∏Ç‡∏≠‡∏á Hero ‡∏Å‡∏•‡∏±‡∏ö (option ‡∏£‡∏ß‡∏° cache ‡∏ï‡∏≤‡∏° system ‡∏à‡∏£‡∏¥‡∏á)
    // (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô inventory ‡∏õ‡∏Å‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô inventory.js, ‡πÅ‡∏ï‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏à‡∏∞ simulate if not loaded)

    // 4. Render HTML Popup
    let popupHtml = `
    <div class="popup large">
      <button class="close" onclick="closePopup()">√ó</button>
      <h2 style="margin-bottom:0.4em;">${resultObj.state === "win" ? "üèÜ <b style='color:#54e0be'>‡∏ä‡∏ô‡∏∞!</b>" : "‚ùå <b style='color:#f47'>‡πÅ‡∏û‡πâ</b>"}</h2>
      <div style="font-size:1.2em;color:#bdf;">${resultObj.state === "win" ? "‡∏Ñ‡∏∏‡∏ì‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•" : "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP ‡∏õ‡∏•‡∏≠‡∏ö‡πÉ‡∏à"}</div>
      <hr style="margin:10px 0 10px 0; border:1px solid #234a76;">
      <div style="margin-bottom:8px;"><b>üéñ EXP ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:</b> <span style="color:#7cffda">${expGet}</span> / ‡∏ï‡∏±‡∏ß</div>
      <table style="width:98%;margin:10px 0 18px 0;background:#222a38;border-radius:12px;">
        <tr>
          ${heroDatas.map(c => `<td style="text-align:center;">
            <img src="img/char/${c?.img||'noimg.png'}" alt="${c?.name}" style="width:37px;border-radius:50%;box-shadow:0 0 10px #57faf840;">
            <div style="font-size:.97em;margin-top:7px;">${c?.name}</div>
            <div style="font-size:.9em;margin-top:2px;">LV. <b>${c?.level||'-'}</b> <span style="color:${levelUps.includes(c?.name) ? '#45ff77' : '#aaa'}">${levelUps.includes(c?.name) ? '‚Üë UP!' : ''}</span></div>
          </td>`).join('')}
        </tr>
      </table>
      ${dropItems.length > 0 ? `
      <div style="margin-bottom:7px;"><b>üéÅ ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö</b>:</div>
      <div style="display:flex;gap:15px;flex-wrap:wrap;">
        ${dropItems.map(d => 
          `<div style="background:#23343b;padding:11px 18px;border-radius:8px;box-shadow:0 2px 15px #25f3f026;">
              <b style="font-size:1.17em;">${d.name}</b><br>
              <span style="font-size:.93em;color:#81e6ae;">x${d.qty}</span>
          </div>`
        ).join('')}
      </div>
      ` : ''}
      <div style="margin-top:24px;text-align:center;">
        <button class="primary-btn" onclick="closePopupAndReturn()">‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</button>
      </div>
    </div>
    `;

    // Push popup to #popupLayer (use popupManager)
    let popupLayer = document.getElementById('popupLayer');
    if (!popupLayer) {
        popupLayer = document.createElement('div');
        popupLayer.id = 'popupLayer';
        document.body.appendChild(popupLayer);
    }
    popupLayer.innerHTML = popupHtml;
    popupLayer.classList.add('active');

    // Special: ‡∏õ‡∏¥‡∏î popup ‡πÅ‡∏•‡∏∞ refresh field (‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å/refresh battlefield)
    window.closePopupAndReturn = function() {
        // ‡∏ã‡πà‡∏≠‡∏ô popup, ‡∏Å‡∏•‡∏±‡∏ö index.html
        closePopup();
        if (window.location.pathname.indexOf('index.html') === -1) {
            window.location.href = 'index.html';
        } else {
            // reload team or UI if needed
            if (window.renderBattlefield) window.renderBattlefield();
        }
    }
};

// ---------- INVENTORY ADD HELPER ----------
/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å inventory.js ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö)
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ mock ‡πÑ‡∏ß‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ inventory.js ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÇ‡∏´‡∏•‡∏î
 */
function addToInventory(itemId, qty) {
    let items = [];
    try {
        let raw = localStorage.getItem('user_inventory') || '[]';
        items = JSON.parse(raw);
    } catch { items = []; }
    let item = items.find(x => x.id === itemId);
    if (item) {
        item.qty += qty;
    } else {
        items.push({ id: itemId, qty: qty });
    }
    localStorage.setItem('user_inventory', JSON.stringify(items));
}

// ---------- UTILS ----------
function randomInt(min, max) {
    if (min === max) return min;
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

// ---------- END OF FILE ----------
/**
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:
 * - ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å window.renderBattleResult({ state: "win" }) ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
 * - ‡∏î‡∏π popup ‡πÅ‡∏™‡∏î‡∏á exp, ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°, ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•, ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ "‡∏Å‡∏•‡∏±‡∏ö" ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏î‡πâ
 * - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LocalStorage: char_*, user_inventory, userTeam
 */

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/popupManager.js
// /js/popupManager.js

/**
 * popupManager.js
 * Epic Seven Auto Battle - Popup System (v1.0)
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î Pop-up ‡∏Å‡∏•‡∏≤‡∏á / popover ‡∏ã‡πâ‡∏≠‡∏ô
 * ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö HTML Content, Callback, Responsive
 * ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö index.html, ui.js, ‡∏ó‡∏∏‡∏Å module
 * Author: (‡∏Ñ‡∏∏‡∏ì)
 */

// ‡πÄ‡∏Å‡πá‡∏ö Stack ‡∏Ç‡∏≠‡∏á popup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏ã‡πâ‡∏≠‡∏ô
let popupStack = [];

/**
 * ‡πÄ‡∏õ‡∏¥‡∏î Popup ‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≠
 * @param {Object} options { 
 *    id: string, // ‡∏ä‡∏∑‡πà‡∏≠ feature, ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô key menu, ex: 'quest', 'inventory'
 *    title: string, // ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
 *    content: HTML string, // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML (innerHTML)
 *    size: "normal" | "large" | "tall" | "small",
 *    onClose: function, // callback ‡πÄ‡∏°‡∏∑‡πà‡∏≠ popup ‡∏ô‡∏µ‡πâ‡∏õ‡∏¥‡∏î
 *    showCloseBtn: boolean, // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î (default: true)
 *    autoFocus: CSS selector (optional, ‡πÇ‡∏ü‡∏Å‡∏±‡∏™ input)
 * }
 */
window.popupManager = {
    open: function (options = {}) {
        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô popup ‡∏ã‡πâ‡∏≠‡∏ô‡∏ã‡πâ‡∏≥‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°
        if (popupStack.some(p => p.id === options.id)) {
            return; // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ã‡πâ‡∏≥
        }
        const popupLayer = document.getElementById('popupLayer');
        if (!popupLayer) return;

        const { id, title, content, size, onClose, showCloseBtn, autoFocus } = options;
        const sz = size || 'normal';
        let html = `
      <div class="popup${sz === 'large' ? ' large' : sz === 'tall' ? ' tall' : sz === 'small' ? ' small' : ''}" 
        style="z-index: ${100 + popupStack.length * 2};" popup-id="${id || ''}">
          ${showCloseBtn === false ? '' : `<button class="close" onclick="popupManager.close('${id || ''}')">√ó</button>`}
          <h2 style="margin-bottom:.39em;">${title || ''}</h2>
          <div class="popup-content" style="margin-top:9px;">${content || ''}</div>
      </div>`;

        let wrap = document.createElement('div');
        wrap.className = 'popup-wrap-layer';
        wrap.style = `position:fixed; top:0; left:0; width:100vw;height:100vh;display:flex;
          align-items:center;justify-content:center;z-index:${99 + popupStack.length * 2 + 1};`;
        wrap.innerHTML = html;

        // Store info to Stack
        popupStack.push({
            id,
            wrap,
            onClose: typeof onClose === "function" ? onClose : null
        });

        popupLayer.appendChild(wrap);
        popupLayer.classList.add('active');

        // Auto focus
        if (autoFocus) {
            setTimeout(() => {
                const el = wrap.querySelector(autoFocus);
                if (el) el.focus();
            }, 150);
        }
    },

    /**
     * ‡∏õ‡∏¥‡∏î Popup (‡∏õ‡∏¥‡∏î‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏≤‡∏° id)
     * @param {string} id
     */
    close: function (id = '') {
        const popupLayer = document.getElementById('popupLayer');
        if (!popupLayer) return;
        if (popupStack.length === 0) return;
        let pop;
        if (id) {
            let idx = popupStack.findIndex(p => p.id === id);
            if (idx === -1) return;
            pop = popupStack.splice(idx, 1)[0];
            if (pop && pop.wrap) {
                pop.wrap.remove();
            }
        } else {
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡πà‡∏á id ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡∏ö‡∏ô‡∏™‡∏∏‡∏î
            pop = popupStack.pop();
            if (pop && pop.wrap) {
                pop.wrap.remove();
            }
        }
        // onClose callback
        if (pop && pop.onClose) pop.onClose();

        // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ popup ‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î layer
        if (popupStack.length === 0) {
            popupLayer.classList.remove('active');
        }
    },

    /**
     * ‡∏õ‡∏¥‡∏î Popups ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (reset stack)
     */
    closeAll: function () {
        const popupLayer = document.getElementById('popupLayer');
        popupStack.forEach(p => {
            if (p.wrap) p.wrap.remove();
            if (typeof p.onClose === "function") p.onClose();
        });
        popupStack = [];
        if (popupLayer) popupLayer.classList.remove('active');
    },

    /**
     * Render content ‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô popup id ‡∏ô‡∏µ‡πâ (‡πÄ‡∏ä‡πà‡∏ô refetch/refresh)
     * @param {string} id
     * @param {string} content HTML
     */
    update: function (id, content) {
        let pop = popupStack.find(p => p.id === id);
        if (pop && pop.wrap) {
            let inner = pop.wrap.querySelector('.popup-content');
            if (inner) inner.innerHTML = content;
        }
    },

    /**
     * ‡∏î‡∏∂‡∏á Stack popups
     */
    getStack: function () { return [...popupStack]; }
};

// [Global shortcut]
window.openPopup = function (id, content = '', size = 'normal', title = '', options = {}) {
    // For backward compat: openPopup(type, html, size, title, { ... })
    window.popupManager.open({
        id, title: title || id, content, size, ...options
    });
}
window.closePopup = function (id = '') { window.popupManager.close(id); }
window.closeAllPopup = function () { window.popupManager.closeAll(); }

// Escape = close popup ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
document.addEventListener('keyup', ev => {
    if (ev.key === 'Escape') popupManager.close();
});

// Click shadow layer (‡∏õ‡∏¥‡∏î popup ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ popup ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï)
document.getElementById('popupLayer')?.addEventListener('mousedown', ev => {
    if (ev.target.classList.contains('popup-wrap-layer')) {
        // ‡∏´‡∏≤‡∏Å popup ‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡∏°‡∏µ showCloseBtn = false => ‡πÑ‡∏°‡πà‡∏õ‡∏¥‡∏î ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏•‡∏¥‡∏Å
        if (popupStack.length === 0) return;
        let last = popupStack[popupStack.length - 1];
        if (last && last.wrap && last.wrap.querySelector('.close')) {
            window.popupManager.close();
        }
    }
});

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/item.json
[
  {
    "id": "gold",
    "name": "Gold",
    "type": "currency",
    "description": "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤",
    "img": "gold.png",
    "rarity": 1,
    "usable": false,
    "price": 0
  },
  {
    "id": "diamond",
    "name": "Crystal",
    "type": "currency",
    "description": "‡πÄ‡∏û‡∏ä‡∏£ ‡πÉ‡∏ä‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ ‡∏û‡∏¥‡πÄ‡∏®‡∏©",
    "img": "diamond.png",
    "rarity": 2,
    "usable": false,
    "price": 0
  },
  {
    "id": "exp_potion",
    "name": "EXP Potion",
    "type": "xp_item",
    "description": "‡πÄ‡∏û‡∏¥‡πà‡∏° EXP ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢",
    "img": "exp_potion.png",
    "rarity": 2,
    "usable": true,
    "effect": { "exp": 500 },
    "price": 200
  },
  {
    "id": "skill_book",
    "name": "Skill Book",
    "type": "upgrade",
    "description": "‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏Å‡∏¥‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ (‡∏™‡∏∏‡πà‡∏° 1 skill)",
    "img": "skill_book.png",
    "rarity": 3,
    "usable": true,
    "effect": { "skillup": 1 },
    "price": 900
  },
  {
    "id": "rune_shard",
    "name": "Rune Shard",
    "type": "rune_material",
    "description": "‡πÄ‡∏®‡∏©‡∏£‡∏π‡∏ô ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏ô",
    "img": "rune_shard.png",
    "rarity": 2,
    "usable": false,
    "price": 150
  },
  {
    "id": "heal_potion",
    "name": "Heal Potion",
    "type": "heal",
    "description": "‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏ä‡πâ‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π HP 50% ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å",
    "img": "heal_potion.png",
    "rarity": 2,
    "usable": true,
    "effect": { "hp_pct": 50 },
    "price": 120
  }
]

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/inventory.js
// js/inventory.js

let itemData = [];
let inventory = [];

/** ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏à‡∏≤‡∏Å data/item.json */
async function loadItemData() {
  if (itemData.length) return;
  itemData = await fetch('data/item.json').then(r => r.json());
}
/** ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏à‡∏≤‡∏Å localStorage) */
function loadInventory() {
  let raw = localStorage.getItem('user_inventory');
  inventory = raw ? JSON.parse(raw) : [];
}
/** ‡πÄ‡∏ã‡∏ü inventory */
function saveInventory() {
  localStorage.setItem('user_inventory', JSON.stringify(inventory));
}

/** ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏ô data/item.json */
function findItemById(id) {
  return itemData.find(i => i.id === id);
}
/** render UI ‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° */
function renderInventoryUI() {
  let html = `
    <div style="display:flex;flex-direction:column;gap:7px;max-height:420px;overflow-y:auto;">
      ${inventory.length === 0 ? '<div style="color:#bbb;text-align:center;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°</div>' :
        inventory.map(item => {
          let info = findItemById(item.id) || {};
          return `
          <div style="display:flex;align-items:center;background:#272b38;padding:10px 16px;border-radius:10px;gap:19px;">
            <div style="width:36px;height:36px;border-radius:8px;background:#201624;display:flex;justify-content:center;align-items:center;">
              ${info.img ? `<img src="img/item/${info.img}" alt="${info.name}" style="width:32px;">` : "üéí"}
            </div>
            <div style="flex-grow:1;">
              <b>${info.name || item.id}</b>
              <div style="font-size:.91em;color:#84ccff;margin-top:2px;">${info.description || ''}</div>
            </div>
            <div style="color:#aaffbe;font-weight:bold;font-size:1.07em;">x${item.qty}</div>
            ${info.usable ? `<button class="primary-btn" style="padding:5px 1em 5px 1em;font-size:.96em;" onclick="useItemPrompt('${item.id}')">‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏¢</button>` : ""}
          </div>`
        }).join('')}
    </div>
  `;
  document.getElementById('inventoryArea').innerHTML = html;
}

/** ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° */
window.useItemPrompt = function(itemId) {
  let info = findItemById(itemId);
  window.openPopup('useItem', `
    <div style="text-align:center;">
      <img src="img/item/${info.img}" style="width:52px;margin-bottom:8px;">
      <div style="font-size:1.09em;">${info.name}</div>
      <div style="margin:.6em 0 1.1em 0;font-size:.97em;color:#7cf;">${info.description}</div>
      <button class="primary-btn" style="margin:.8em .3em 0 .3em;padding:.5em 2.1em;" onclick="useItemNow('${itemId}')">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°</button>
      <button class="secondary-btn" style="margin:.8em .3em 0 .3em;" onclick="closePopup()">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
    </div>
  `, 'small', `‡πÉ‡∏ä‡πâ ${info.name}`);
}

/** ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏•‡∏î qty, ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å effect, update ui) */
window.useItemNow = function(itemId) {
  let idx = inventory.findIndex(i => i.id === itemId);
  let info = findItemById(itemId);
  if (idx === -1 || !info) return;
  if (inventory[idx].qty <= 0) return;
  // Effect (mock: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï character / heal / exp ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
  if (info.effect && info.effect.exp) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° exp ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÅ‡∏£‡∏Å‡πÉ‡∏ô team (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
    let t = JSON.parse(localStorage.getItem('userTeam') || "[]");
    if (t.length) {
      let cid = t[0];
      let cdata = JSON.parse(localStorage.getItem("char_" + cid) || '{}');
      if (cdata) {
        cdata.exp = (cdata.exp || 0) + info.effect.exp;
        localStorage.setItem("char_" + cid, JSON.stringify(cdata));
        alert(`‡πÄ‡∏û‡∏¥‡πà‡∏° EXP ‡πÉ‡∏´‡πâ ${cdata.name} +${info.effect.exp}`);
      }
    }
  }
  // TODO: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö heal, skillup, hp_pct, etc. ‡∏ï‡πà‡∏≠
  inventory[idx].qty--;
  if (inventory[idx].qty === 0) inventory.splice(idx, 1);
  saveInventory();
  window.closePopup();
  renderInventoryUI();
}

/** ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ inventory */
window.addToInventory = function(itemId, qty) {
  if (!itemId || !qty) return;
  let idx = inventory.findIndex(i => i.id === itemId);
  if (idx >= 0) inventory[idx].qty += qty;
  else inventory.push({ id: itemId, qty });
  saveInventory();
}

/** ‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° (admin, debug) */
window.removeFromInventory = function(itemId, qty) {
  let idx = inventory.findIndex(i => i.id === itemId);
  if (idx >= 0) {
    inventory[idx].qty -= qty;
    if (inventory[idx].qty <= 0) inventory.splice(idx, 1);
    saveInventory();
  }
}

/** ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö popups (‡πÄ‡∏ä‡πà‡∏ô index.html, quest, shop ‡∏Ø‡∏•‡∏Ø) */
document.addEventListener('DOMContentLoaded', async () => {
  await loadItemData();
  loadInventory();
  // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° hook popup
  const showInvPopup = () => {
    window.openPopup('inventory', `
      <div id="inventoryArea"></div>
      <div style="text-align:right;"><button class="secondary-btn" onclick="closePopup()">‡∏õ‡∏¥‡∏î</button></div>
    `, 'large', "‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°");
    renderInventoryUI();
  };
  let btn = document.getElementById('btnInventory');
  if (btn) btn.onclick = showInvPopup;
  // Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
  window.renderInventoryUI = renderInventoryUI;
});

/** ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ */
window.inventoryEngine = {
  load: loadInventory,
  save: saveInventory,
  add: window.addToInventory,
  remove: window.removeFromInventory,
  list: () => inventory,
  findItemById,
  reloadAll: async () => { await loadItemData(); loadInventory(); },
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/upgrade.json
{
  "levelup": {
    "exp_required_base": 600,
    "exp_curve": 1.2,
    "exp_item": "exp_potion"
  },
  "promotion": {
    "star_max": 6,
    "requirements": [
      { "star": 3, "cost_gold": 1000, "materials": [ { "id": "rune_shard", "qty": 4 } ] },
      { "star": 4, "cost_gold": 4000, "materials": [ { "id": "rune_shard", "qty": 9 } ] },
      { "star": 5, "cost_gold": 9000, "materials": [ { "id": "rune_shard", "qty": 15 }, { "id": "heal_potion", "qty": 2 } ] }
    ]
  },
  "skillup": {
    "item": "skill_book",
    "increase_percent": 11,
    "max_lv": 6,
    "cost_gold": 700
  },
  "awaken": {
    "enabled": true,
    "require_materials": [
      { "star": 4, "materials": [ { "id": "rune_shard", "qty": 8 }, { "id": "heal_potion", "qty": 1 } ] },
      { "star": 5, "materials": [ { "id": "rune_shard", "qty": 14 }, { "id": "heal_potion", "qty": 2 } ] }
    ]
  }
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/upgrade.js
// js/upgrade.js - Epic Seven Auto Battle - Upgrade System

let upgradeConfig = {};
let charUpgradeTarget = null;
let inventory = []; // preload via inventory.js

/** ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• config ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏à‡∏≤‡∏Å /data/upgrade.json */
async function loadUpgradeConfig() {
  if (Object.keys(upgradeConfig).length) return;
  upgradeConfig = await fetch('data/upgrade.json').then(r => r.json());
}

/** Render ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡πÇ‡∏ä‡∏ß‡πå stat + ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•/‡∏≠‡∏±‡∏õ‡∏™‡∏Å‡∏¥‡∏•/‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô */
async function openUpgradePopup(characterId) {
  await loadUpgradeConfig();
  await window.inventoryEngine.reloadAll();
  let char = JSON.parse(localStorage.getItem('char_' + characterId)
               || localStorage.getItem('char_' + characterId.replace('_', ''))
               || '{}');
  if (!char || !char.id) {
    alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ô‡∏µ‡πâ");
    return;
  }
  charUpgradeTarget = char; // export ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö event ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å

  // Render main popup
  let html = `
    <div style="display:flex;flex-direction:column;align-items:center;gap:10px;">
      <img src="img/char/${char.img}" style="width:72px;border-radius:15px;box-shadow:0 0 22px #1defeb66;">
      <div style="font-size:1.18em;font-weight:bold;">${char.name}</div>
      <div>Lv. <b>${char.level}</b> <span style="color:#ffe480;">‚òÖ${char.star}</span>
          / <b>EXP</b> ${char.exp}/${char.exp_max || '?'}
      </div>
      <div style="color:#87c7ff;">HP <b>${char.hp}</b> | ATK <b>${char.atk}</b> | DEF <b>${char.def}</b> | SPD <b>${char.spd}</b></div>
      <hr style="width:88%; border:1px solid #234">
      <div style="display:flex;gap:12px;">
        <button class="primary-btn" onclick="doLevelUpChar('${char.id}')">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏•</button>
        <button class="primary-btn" onclick="doSkillUpChar('${char.id}')">‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏Å‡∏¥‡∏•</button>
        <button class="primary-btn" onclick="doPromoteChar('${char.id}')">‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß</button>
      </div>
      <button class="secondary-btn" onclick="closePopup()">‡∏õ‡∏¥‡∏î</button>
    </div>
  `;
  window.openPopup('upgradePopup', html, 'large', '‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£');
}

/** ‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏• (‡πÉ‡∏ä‡πâ exp_potion ‡πÑ‡∏î‡πâ‡∏Å‡πà‡∏≠‡∏ô, ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÑ‡∏î‡πâ) */
window.doLevelUpChar = function (charId) {
  let char = JSON.parse(localStorage.getItem('char_' + charId));
  if (!char) return;
  let expItem = upgradeConfig.levelup.exp_item;
  let inv = window.inventoryEngine.list();
  let owned = inv.find(i => i.id === expItem);
  if (!owned || owned.qty <= 0) {
    alert("‡πÑ‡∏°‡πà‡∏°‡∏µ EXP Potion ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á");
    return;
  }
  // EXP ‡πÄ‡∏û‡∏¥‡πà‡∏°
  let expAdd = 500;
  char.exp = (char.exp || 0) + expAdd;
  let lvled = false;
  while (char.exp >= (char.exp_max || 99999)) {
    char.exp -= char.exp_max;
    char.level = (char.level || 1) + 1;
    lvled = true;
  }
  if (lvled) alert("Level UP!");
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° status ‡∏ó‡∏∏‡∏Å‡πÄ‡∏•‡πÄ‡∏ß‡∏• (‡∏™‡∏π‡∏ï‡∏£ basic -- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏¢‡∏á config/curve ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ)
  char.hp = Math.round(char.hp * 1.085);
  char.atk = Math.round(char.atk * 1.08);
  char.def = Math.round(char.def * 1.09);
  localStorage.setItem('char_' + char.id, JSON.stringify(char));
  window.inventoryEngine.remove(expItem, 1);
  openUpgradePopup(char.id);
};

/** ‡∏≠‡∏±‡∏õ‡∏™‡∏Å‡∏¥‡∏• (‡πÉ‡∏ä‡πâ skill_book, ‡πÄ‡∏û‡∏¥‡πà‡∏° multiplier, ‡∏•‡∏î‡∏Ñ‡∏π‡∏•‡∏î‡∏≤‡∏ß‡∏ô‡πå) */
window.doSkillUpChar = function (charId) {
  let char = JSON.parse(localStorage.getItem('char_' + charId));
  if (!char) return;
  let inv = window.inventoryEngine.list();
  let skillBookItem = upgradeConfig.skillup.item;
  let owned = inv.find(i => i.id === skillBookItem);
  if (!owned || owned.qty <= 0) { alert("‡πÑ‡∏°‡πà‡∏°‡∏µ Skill Book ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á"); return; }
  // Pick skill to up (‡∏™‡∏∏‡πà‡∏° 1 skill)
  let skills = char.skills || [];
  if (!skills.length) { alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏Å‡∏¥‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î"); return; }
  let idx = Math.floor(Math.random() * skills.length);
  let sk = skills[idx];
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° multiplier ‡πÅ‡∏•‡∏∞‡∏•‡∏î cooldown ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ
  if (sk.multiplier)
    sk.multiplier = +(sk.multiplier + upgradeConfig.skillup.increase_percent/100).toFixed(2);
  if (sk.cooldown && sk.cooldown > 1)
    sk.cooldown = Math.max(1, sk.cooldown - 1);
  char.skills[idx] = sk;
  localStorage.setItem('char_' + char.id, JSON.stringify(char));
  window.inventoryEngine.remove(skillBookItem, 1);
  alert(`‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î Skill "${sk.name}" ‡πÉ‡∏´‡πâ‡πÅ‡∏£‡∏á‡∏Ç‡∏∂‡πâ‡∏ô!`);
  openUpgradePopup(char.id);
};

/** ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô/Promotion ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß (‡πÉ‡∏ä‡πâ gold+materials) */
window.doPromoteChar = function (charId) {
  let char = JSON.parse(localStorage.getItem('char_' + charId));
  if (!char) return;
  let starNext = (char.star || 1) + 1;
  let prom = upgradeConfig.promotion.requirements.find(r => r.star === char.star);
  if (!prom) { alert("‡∏î‡∏≤‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß"); return; }
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡∏≠‡∏á
  let inv = window.inventoryEngine.list();
  let gold = inv.find(i => i.id === 'gold');
  if (!gold || gold.qty < prom.cost_gold) {
    alert("Gold ‡πÑ‡∏°‡πà‡∏û‡∏≠");
    return;
  }
  let enough = prom.materials.every(mat =>
    inv.find(i => i.id === mat.id && i.qty >= mat.qty));
  if (!enough) { alert("‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÑ‡∏°‡πà‡∏û‡∏≠"); return; }
  // ‡∏´‡∏±‡∏Å‡∏Ç‡∏≠‡∏á
  window.inventoryEngine.remove('gold', prom.cost_gold);
  prom.materials.forEach(mat => window.inventoryEngine.remove(mat.id, mat.qty));
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß+‡∏≠‡∏±‡∏õ stat
  char.star = starNext;
  char.hp = Math.floor(char.hp * 1.20);
  char.atk = Math.floor(char.atk * 1.15);
  char.def = Math.floor(char.def * 1.12);
  localStorage.setItem('char_' + char.id, JSON.stringify(char));
  alert("‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏î‡∏≤‡∏ß‡πÉ‡∏´‡∏°‡πà: " + char.star);
  openUpgradePopup(char.id);
};

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° event ‡∏Å‡∏±‡∏ö popup
document.addEventListener('DOMContentLoaded', () => {
  // Hook ‡∏Å‡∏±‡∏ö characterCollection
  window.upgradeCharPopup = openUpgradePopup;
  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
  let area = document.getElementById('characterArea');
  if (area) area.addEventListener('click', e => {
    let target = e.target.closest('[data-upgrade]');
    if (target) openUpgradePopup(target.dataset.upgrade);
  });
});

// Expose ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
window.upgradeEngine = {
  open: openUpgradePopup,
  reloadConfig: loadUpgradeConfig
};

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/rune.json
[
  {
    "id": "spd_rare",
    "name": "Speed Rune",
    "slot": 2,
    "main_stat": { "type": "spd", "val": 25 },
    "sub_stats": [
      { "type": "atk_pct", "val": 7 },
      { "type": "def", "val": 16 }
    ],
    "set": "speed",
    "rarity": 4,
    "icon": "üí®"
  },
  {
    "id": "atk_pure",
    "name": "Attack Rune",
    "slot": 1,
    "main_stat": { "type": "atk_pct", "val": 15 },
    "sub_stats": [
      { "type": "spd", "val": 5 }
    ],
    "set": "rage",
    "rarity": 3,
    "icon": "‚öîÔ∏è"
  },
  {
    "id": "crit_big",
    "name": "Critical Rune",
    "slot": 4,
    "main_stat": { "type": "crit_pct", "val": 12 },
    "sub_stats": [
      { "type": "atk_pct", "val": 6 },
      { "type": "spd", "val": 7 },
      { "type": "effectiveness", "val": 4 }
    ],
    "set": "critical",
    "rarity": 5,
    "icon": "üéØ"
  },
  {
    "id": "def_basic",
    "name": "Defense Rune",
    "slot": 3,
    "main_stat": { "type": "def_pct", "val": 10 },
    "sub_stats": [],
    "set": "defend",
    "rarity": 2,
    "icon": "üõ°Ô∏è"
  },
  {
    "set_bonuses": {
      "speed":    { "slot_required": 2, "bonus": { "spd": 25 },        "desc": "Speed +25%"  },
      "rage":     { "slot_required": 4, "bonus": { "atk_pct": 35 },     "desc": "ATK +35%"    },
      "critical": { "slot_required": 2, "bonus": { "crit_pct": 12 },    "desc": "Crit +12%"   },
      "defend":   { "slot_required": 2, "bonus": { "def_pct": 15 },     "desc": "DEF +15%"    }
    }
  }
]

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/rune.js
// js/rune.js
let runeData = [];
let runeSetBonuses = {};
let userRunes = [];    // ‡∏£‡∏π‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô inventory (id,unlock,slot ‡∏Ø‡∏•‡∏Ø)
let equippedRunes = {}; // { char_id: [slot1, slot2, slot3, slot4] }
let currentCharEquip = null;   // ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏ô‡∏à‡∏≤‡∏Å data/rune.json
async function loadRuneData() {
  if (runeData.length) return;
  let arr = await fetch('data/rune.json').then(r => r.json());
  runeData = arr.filter(x => !x.set_bonuses);
  runeSetBonuses = arr.find(x => x.set_bonuses)?.set_bonuses || {};
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏ô‡∏Ç‡∏≠‡∏á user (‡∏à‡∏≤‡∏Å localStorage)
function loadUserRunes() {
  userRunes = JSON.parse(localStorage.getItem('user_runes') || "[]");
  equippedRunes = JSON.parse(localStorage.getItem('equipped_runes') || "{}");
}

// ‡πÄ‡∏ã‡∏ü‡∏£‡∏π‡∏ô‡∏Å‡∏•‡∏±‡∏ö localStorage
function saveUserRunes() {
  localStorage.setItem('user_runes', JSON.stringify(userRunes));
  localStorage.setItem('equipped_runes', JSON.stringify(equippedRunes));
}

// UI - render pop-up ‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô
async function openRuneEquipPopup(char_id) {
  await loadRuneData(); loadUserRunes();
  currentCharEquip = char_id;
  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° grid ‡∏ä‡πà‡∏≠‡∏á/‡∏£‡∏π‡∏ô
  let charRunes = equippedRunes[char_id] || [null, null, null, null];
  let runeSlotHtml = '';
  for (let slot = 1; slot <= 4; slot++) {
    let runeId = charRunes[slot - 1];
    let ru = runeData.find(r => r.id === runeId);
    runeSlotHtml += `<div style="border:1px solid #348ac9;border-radius:10px;padding:8px 7px;min-width:96px;min-height:65px;margin:3px 0;">
      <b>‡∏ä‡πà‡∏≠‡∏á ${slot}:</b> ${ru ?
        `<span title="${ru.name}" style="font-size:1.2em;vertical-align:middle;">${ru.icon ?? 'üî∏'}</span> 
        <span style="color:#7df;font-weight:600;">${ru.name}</span>
        <button class="secondary-btn" style="font-size:.96em;padding:.1em .8em;margin-left:4px;" onclick="unequipRune(${slot})">‡∏ñ‡∏≠‡∏ô</button>
        <div style="font-size:0.88em;color:#acfc94;margin-top:4px;">${mainStatText(ru.main_stat)} ${ru.sub_stats.map(mainStatText).join(', ')}</div>`
        : `<span style="color:#888;">‡∏ß‡πà‡∏≤‡∏á</span>
          <button class="primary-btn" style="font-size:.9em;" onclick="showSelectRune(${slot})">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏ô</button>`
      }
      </div>`;
  }
  const setBuffHtml = renderSetBonus(charRunes);
  const html = `
    <div style="display:flex;flex-direction:column;gap:7px;">
      <h3>‡∏£'‡∏∏‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ô‡∏µ‡πâ</h3>
      ${runeSlotHtml}
      ${setBuffHtml}
      <button class="secondary-btn" onclick="closePopup()">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î</button>
    </div>`;
  window.openPopup('runeEquip', html, 'large', '‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô');
}

// Render set buff ‡∏£‡∏ß‡∏° (‡∏ñ‡πâ‡∏≤‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏£‡∏ö)
function renderSetBonus(runeIdArr) {
  let sets = {}, slots = {};
  runeIdArr.forEach(id => {
    let r = runeData.find(a => a.id === id);
    if (r) {
      sets[r.set] = (sets[r.set] || 0) + 1;
      slots[r.slot] = 1;
    }
  });
  let buffHtml = '';
  Object.keys(sets).forEach(set => {
    const cfg = runeSetBonuses[set];
    if (cfg && sets[set] >= cfg.slot_required) {
      buffHtml += `<div style="background:#22442b;margin:13px 0;padding:7px 9px;border-radius:7px;">
          <span style="font-size:1.16em;">${cfg.desc}</span> <b style="color:#66e0ca;">(‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ã‡πá‡∏ï!)</b>
        </div>`;
    }
  });
  return buffHtml ? `<div style="margin-top:14px;">${buffHtml}</div>` : '';
}

// ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏î‡∏£‡∏π‡∏ô‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á
window.showSelectRune = function(slot) {
  // ‡πÅ‡∏™‡∏î‡∏á pop-up ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á ‚Äú‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡πÉ‡∏Ñ‡∏£‚Äù
  let avai = userRunes.filter(r => !Object.values(equippedRunes)
                        .flat().includes(r.rune_id) && runeData.find(x => x.id === r.rune_id)?.slot === slot);
  let html = avai.length
      ? avai.map(r => {
          let d = runeData.find(x => x.id === r.rune_id);
          return `<div style="display:flex;align-items:center;gap:9px;">
            <span style="font-size:1.3em;">${d.icon ?? 'üî∏'}</span>
            <b>${d.name}</b> <span style="font-size:0.93em;color:#d2ffee;">${mainStatText(d.main_stat)}</span>
            <button class="primary-btn" onclick="equipRuneSlot('${r.rune_id}',${slot})">‡πÉ‡∏™‡πà</button>
          </div>`;
        }).join('<hr style="margin:2px 0;">')
      : `<div style="color:#fda;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ</div>`;
  window.openPopup('selectRune', html, 'small', `‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏ô ‡∏ä‡πà‡∏≠‡∏á ${slot}`);
};

// ‡πÄ‡∏™‡∏£‡∏¥‡∏°-helper
function mainStatText(stat) {
  if (!stat) return "";
  const lib = { spd: 'SPD', atk_pct: 'ATK%', def: 'DEF', def_pct: 'DEF%', crit_pct: 'CRIT%', effectiveness: 'EFF' };
  return (lib[stat.type] || stat.type) + " +" + stat.val;
}

// ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏ô‡∏•‡∏á slot
window.equipRuneSlot = function(rune_id, slot) {
  let charRunes = equippedRunes[currentCharEquip] || [null,null,null,null];
  charRunes[slot - 1] = rune_id;
  equippedRunes[currentCharEquip] = charRunes;
  saveUserRunes();
  closePopup('selectRune'); // ‡∏õ‡∏¥‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏ô
  openRuneEquipPopup(currentCharEquip);
};
// ‡∏ñ‡∏≠‡∏ô‡∏£‡∏π‡∏ô (‡∏ä‡πà‡∏≠‡∏á)
window.unequipRune = function(slot) {
  let charRunes = equippedRunes[currentCharEquip] || [null,null,null,null];
  charRunes[slot - 1] = null;
  equippedRunes[currentCharEquip] = charRunes;
  saveUserRunes();
  openRuneEquipPopup(currentCharEquip);
};

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡∏£‡∏π‡∏ô (‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) - ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏∏‡πà‡∏° (Mock)
window.upgradeRune = function(rune_id) {
  // ‡∏à‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î + ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö (mock)
  alert("= Demo = ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏õ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏£‡∏π‡∏ô " + rune_id + " ‡πÅ‡∏•‡πâ‡∏ß (mock)");
};


/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: export ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° */
window.runeEngine = {
  openEquipPopup: openRuneEquipPopup,
  getEquipped: function(char_id) { loadUserRunes(); return equippedRunes[char_id] || [null,null,null,null]; },
  getUserRunes: function() { loadUserRunes(); return userRunes; },
  addRune: function(rune_id) { userRunes.push({ rune_id }); saveUserRunes(); },
  removeRune: function(rune_id) { userRunes = userRunes.filter(r => r.rune_id !== rune_id); saveUserRunes(); }
};

// Hook DOM ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ (‡πÄ‡∏ä‡πà‡∏ô‡∏õ‡∏∏‡πà‡∏°)
document.addEventListener('DOMContentLoaded', async () => {
  await loadRuneData(); loadUserRunes();
  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°: <button data-equiprune="cid">‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏π‡∏ô</button>
  if (document.getElementById('characterArea')) {
    document.getElementById('characterArea').addEventListener('click', e => {
      const btn = e.target.closest('[data-equiprune]');
      if (btn) openRuneEquipPopup(btn.getAttribute('data-equiprune'));
    });
  }
});

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå data/gacha.json
{
  "gachas": [
    {
      "id": "premium_summon",
      "name": "Premium Gacha",
      "type": "normal",
      "enabled": true,
      "cost": { "item": "diamond", "amount": 50 },
      "pool": [
        { "char_id": "astra", "rarity": 5, "rate": 5 },
        { "char_id": "slime_basic", "rarity": 3, "rate": 95 }
      ],
      "pity": { "enabled": true, "max": 20, "guarantee_rarity": 5 },
      "banner_img": "gacha_premium.png",
      "desc": "‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á\n‡∏¢‡∏¥‡πà‡∏á‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡∏¢‡∏¥‡πà‡∏á‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ ‚òÖ5!"
    },
    {
      "id": "event_summon_may2024",
      "name": "May 2024 Event",
      "type": "event",
      "enabled": false,
      "cost": { "item": "ticket_event", "amount": 1 },
      "pool": [
        { "char_id": "astra", "rarity": 5, "rate": 10 },
        { "char_id": "slime_basic", "rarity": 3, "rate": 90 }
      ],
      "pity": { "enabled": false },
      "banner_img": "gacha_event_may2024.png",
      "desc": "‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏¥‡∏à - ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡πã‡∏ß Event ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
    }
  ]
}

‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå js/gacha.js
// js/gacha.js - ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ Epic Seven Clone Frontend

let gachaList = [];
let gachaUserLog = [];
let gachaPity = {}; // {gachaId: <count>}

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function loadGachaData() {
    if (gachaList.length) return;
    const res = await fetch('data/gacha.json').then(r => r.json());
    gachaList = res.gachas;
}

// ‡πÇ‡∏´‡∏•‡∏î log ‡∏Å‡∏≤‡∏ä‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function loadGachaUserLog() {
    gachaUserLog = JSON.parse(localStorage.getItem('gacha_user_log') || '[]');
    gachaPity = JSON.parse(localStorage.getItem('gacha_pity') || '{}');
}
// ‡πÄ‡∏ã‡∏ü log/pity
function saveGachaLog() {
    localStorage.setItem('gacha_user_log', JSON.stringify(gachaUserLog));
    localStorage.setItem('gacha_pity', JSON.stringify(gachaPity));
}

// Render popup UI
async function openGachaPopup() {
    await loadGachaData(); loadGachaUserLog();
    // Render ‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏ä‡∏≤‡∏ó‡∏µ‡πà enabled
    let avai = gachaList.filter(g => g.enabled);
    if (!avai.length) {
        window.openPopup('gacha', `<div>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</div><button class="secondary-btn" onclick="closePopup()">‡∏õ‡∏¥‡∏î</button>`, 'large', '‡∏Å‡∏≤‡∏ä‡∏≤');
        return;
    }
    // Render banner + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏∏‡πà‡∏°
    let html = avai.map(g => `
        <div style="background:#1b232e;padding:24px 1.5em;border-radius:18px;margin-bottom:24px;text-align:center;box-shadow:0 2px 18px #278ddf18;">
            <img src="img/gacha/${g.banner_img || 'noimg.png'}" style="width:100%;min-width:210px;max-width:330px;border-radius:9px;margin-bottom:7px;box-shadow:0 1px 40px #35cfff23;">
            <div style="font-size:1.14em;color:#7ffbfb;font-weight:600;margin-bottom:4px;">${g.name}</div>
            <div style="color:#aef;margin-bottom:1em;">${g.desc || ''}</div>
            <div style="font-size:.95em;margin-bottom:1em;"><b>‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: </b>
                <span style="color:goldenrod;font-weight:bold;">${g.cost.amount}</span> 
                <img src="img/item/${g.cost.item}.png" style="width:19px;vertical-align:middle;" />
            </div>
            <div><button class="primary-btn" onclick="gachaSummon('${g.id}',1)">‡∏™‡∏∏‡πà‡∏° 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</button>
            <button class="primary-btn" onclick="gachaSummon('${g.id}',10)">‡∏™‡∏∏‡πà‡∏° 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</button></div>
            <div style="margin-top:18px;font-size:.9em;">
                <a href="#" onclick="openGachaLogPopup('${g.id}');return false;" style="color:#85deff;text-decoration:underline;">‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°</a>
                ${g.pity?.enabled ? `<span style="margin-left:2em;color:#ffa;">Pity: ${gachaPity[g.id]||0}/${g.pity.max}</span>` : ''}
            </div>
        </div>
    `).join('');
    window.openPopup('gacha', html, 'large', '‡∏Å‡∏≤‡∏ä‡∏≤');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏° gacha ([‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°])
window.gachaSummon = async function(gachaId, times = 1) {
    await loadGachaData(); loadGachaUserLog();
    let g = gachaList.find(x => x.id === gachaId); if (!g) return;
    // ‡∏ï‡∏£‡∏ß‡∏à inventory
    let inv = window.inventoryEngine?.list();
    let currency = inv?.find(i => i.id === g.cost.item);
    if (!currency || currency.qty < g.cost.amount * times) {
        alert(`‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ ${g.cost.item} ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠`);
        return;
    }
    // loop draw
    let poolFlat = [];
    g.pool.forEach(entry => {
        for (let i = 0; i < entry.rate; i++) poolFlat.push(entry.char_id);
    });
    let got = [], pityFlag = false;
    for (let t = 0; t < times; t++) {
        let pity = (g.pity?.enabled ? gachaPity[g.id] || 0 : 0);
        let pick;
        // pity trigger
        if (g.pity?.enabled && g.pity.max && pity+1 >= g.pity.max) {
            pick = g.pool.find(c => c.rarity === g.pity.guarantee_rarity)?.char_id || poolFlat[0];
            gachaPity[g.id] = 0;
            pityFlag = true;
        } else {
            pick = poolFlat[Math.floor(Math.random() * poolFlat.length)];
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ï‡∏≤‡∏° pity reset
            let card = g.pool.find(c => c.char_id === pick);
            if (g.pity?.enabled) {
                if(card && card.rarity === g.pity.guarantee_rarity) gachaPity[g.id] = 0;
                else gachaPity[g.id] = (gachaPity[g.id] || 0) + 1;
            }
        }
        got.push(pick);
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á (characterCollection / LocalStorage)
        window.collectCharacter?.(pick);
        // Log
        gachaUserLog.push({
            time: Date.now(),
            char: pick,
            gacha_id: g.id,
            rarity: g.pool.find(c => c.char_id === pick)?.rarity || 3
        });
    }
    // ‡∏´‡∏±‡∏Å‡∏ó‡∏∏‡∏ô
    window.inventoryEngine.remove(g.cost.item, g.cost.amount * times);
    saveGachaLog();
    // Show animation/result popup
    openGachaResult(g, got, pityFlag);
};

// Add character (‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ)
window.collectCharacter = function(charId) {
    // ‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏•‡∏á localStorage/char_collection
    let chars = JSON.parse(localStorage.getItem('char_collection') || '[]');
    if(!chars.includes(charId)) chars.push(charId);
    localStorage.setItem('char_collection', JSON.stringify(chars));
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ (animation‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ + ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£)
function openGachaResult(gacha, resultArr, pityFlag) {
    let html = `<div style="text-align:center;">
        <div style="font-size:1.7em;margin-bottom:6px;">üé¥ Gacha Result</div>
        <div style="color:#fcc;${pityFlag ? 'font-weight:bold;' : ''}">${pityFlag ? 'Pity Triggerd! ‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î!' : ''}</div>
        <div style="display:flex;justify-content:center;gap:13px;flex-wrap:wrap;margin-top:1em;">` +
        resultArr.map(cid => {
            let imgSrc = `img/char/${cid}.png`;
            return `<div style="background:#223352;border:2px solid #35aaffb7;border-radius:13px;padding:8px 12px;display:flex;flex-direction:column;align-items:center;min-width:93px;">
                <img src="${imgSrc}" style="width:58px;margin-bottom:8px;border-radius:10px;box-shadow:0 0 17px #27508080;" />
                <b style="color:#aef;">${cid}</b>
            </div>`;
        }).join('') +
        `</div>
        <div style="margin-top:18px;">
            <button class="primary-btn" onclick="closePopup();openGachaPopup();">‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏ä‡∏≤</button>
        </div>
    </div>`;
    window.openPopup('gachaResult', html, 'large', '‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏ä‡∏≤
window.openGachaLogPopup = function(gachaId) {
    loadGachaUserLog();
    let logs = gachaUserLog.filter(x => x.gacha_id === gachaId).slice(-30).reverse();
    let html = logs.length ? `<div style="max-height:300px;overflow-y:auto;"><table style="width:100%;">
        <tr style="color:#aae;"><th>#</th><th>‡πÄ‡∏ß‡∏•‡∏≤</th><th>‡∏ú‡∏•‡∏™‡∏∏‡πà‡∏°</th><th>Rarity</th></tr>
        ${logs.map((l,i) => `<tr>
            <td>${i+1}</td>
            <td>${(new Date(l.time)).toLocaleString()}</td>
            <td>${l.char}</td>
            <td><span style="color:${l.rarity>=5?'gold':'#fff'};">‚òÖ${l.rarity}</span></td>
        </tr>`).join('')}
        </table></div>` : `<div style="text-align:center">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤</div>`;
    window.openPopup('gachaLog'+gachaId, html, 'large', "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏ä‡∏≤");
}

// auto hook ‡∏õ‡∏∏‡πà‡∏°
document.addEventListener('DOMContentLoaded', () => {
    let btn = document.getElementById('btnGacha');
    if(btn) btn.onclick = openGachaPopup;
});

// ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö/admin ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
window.gachaEngine = {
    open: openGachaPopup,
    log: openGachaLogPopup,
    summon: window.gachaSummon
};

‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ ‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ó‡∏™‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÅ‡∏•‡∏∞‡∏ö‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏î‡∏´‡∏≤‡∏à‡∏∏‡∏î‡∏ö‡∏±‡∏Ñ‡πÑ‡∏õ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏°‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï

‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡πÄ‡∏ï‡πá‡∏°‡∏â‡∏ö‡∏±‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô‡∏Å‡πà‡∏≠‡∏ô gacha.js, data/gacha.json ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏â‡∏ö‡∏±‡∏ö‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ 
‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏´‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡πà‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£
(‡∏£‡∏π‡∏õ‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å‡∏à‡∏∞‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡∏Æ‡∏µ‡πÇ‡∏£‡πà, ‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏ô‡∏≠‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö)