// js/redeem.js
let redeemCodeList = [];
let userUsedRedeem = []; // [{code_id:..., redeemed_time:...}]
async function loadRedeemCodeList() {
  if (redeemCodeList.length) return;
  try {
    redeemCodeList = (await fetch('data/redeem.json').then(r=>r.json()))?.codes || [];
  } catch { redeemCodeList = []; }
  loadUserRedeemUsed();
}
function loadUserRedeemUsed() {
  userUsedRedeem = JSON.parse(localStorage.getItem('user_used_redeem') || '[]');
}
function saveUserRedeemUsed() {
  localStorage.setItem('user_used_redeem', JSON.stringify(userUsedRedeem));
}
// ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏õ "‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•"
window.openRedeemPopup = function () {
  const html = `
    <div style="text-align:center;">
      <div style="font-size:1.16em;font-weight:600;margin-bottom:.88em;">üéÅ ‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</div>
      <input id="redeemInputBox" placeholder="‡πÉ‡∏™‡πà‡πÇ‡∏Ñ‡πâ‡∏î (A-Z, 0-9)" style="width: 90%;" maxlength="32"/>
      <div style="margin:1.3em 0;"><button class="primary-btn" onclick="checkRedeemCode()">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</button></div>
      <div id="redeemResultHint" style="color:#ffc29a;font-size:.94em;margin-top:1em;"></div>
      <div style="color:#aee;margin-top:1.7em;font-size:.89em;">
        *‡πÇ‡∏Ñ‡πâ‡∏î 1 ‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á, ‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏, ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
      </div>
      <button class="secondary-btn" style="margin-top:2.2em;" onclick="closePopup()">‡∏õ‡∏¥‡∏î</button>
    </div>
  `;
  window.openPopup('redeem', html, 'small', '‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î');
  setTimeout(() => document.getElementById('redeemInputBox')?.focus(), 100);
};
// validate and ‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
window.checkRedeemCode = async function () {
  await loadRedeemCodeList();
  const box = document.getElementById('redeemInputBox');
  if (!box) return;
  let code = box.value.trim().toUpperCase();
  let hintEl = document.getElementById('redeemResultHint');
  hintEl.innerText = "";
  if (!code.match(/^[A-Z0-9\-\_]+$/)) return hintEl.innerText = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (A-Z, 0-9)";
  let redeem = redeemCodeList.find(c => c.id === code && c.enabled !== false);
  const now = Date.now();
  if (!redeem)
    return hintEl.innerText = "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î/‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß";
  if (redeem.start_time && now < redeem.start_time)
    return hintEl.innerText = "‚ùå ‡πÇ‡∏Ñ‡πâ‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ";
  if (redeem.end_time && now > redeem.end_time)
    return hintEl.innerText = "‚ùå ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß";
  if (redeem.max_usage && redeem.used_count >= redeem.max_usage)
        return hintEl.innerText = "‚ùå ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß";
  // per user
  loadUserRedeemUsed();
  if (userUsedRedeem.some(u => u.code_id === code)) {
    return hintEl.innerText = "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á";
  }
  // ‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏≠‡∏î‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏Ñ‡∏ß‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô, ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡πá‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  let curUserId = localStorage.getItem('user_id') || 'guest';
  // ‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ inventory/character)
  const rewardHtml = [];
  if (redeem.reward && Array.isArray(redeem.reward)) {
    for (let r of redeem.reward) {
      if (r.type === 'item') {
        window.addToInventory?.(r.id, r.qty || 1);
        rewardHtml.push(`<div>üéÅ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö <b>${window.inventoryEngine?.findItemById(r.id)?.name || r.id} x${r.qty}</b></div>`);
      } else if (r.type === 'character') {
        window.collectCharacter?.(r.id);
        rewardHtml.push(`<div>üé¥ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ <b style="color:#84bcff;">${r.id}</b></div>`);
      }
    }
  }
  // ‡πÄ‡∏ã‡∏ü userUsedRedeem
  userUsedRedeem.push({ code_id: code, time: now, user: curUserId });
  saveUserRedeemUsed();
  // (‡∏ù‡∏±‡πà‡∏á admin/‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° used_count ‡πÄ‡∏≠‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå json)
  // ‡πÅ‡∏™‡∏î‡∏á popup ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  window.openPopup('redeemSuccess', `
    <div style="text-align:center;">
      <div style="font-size:1.15em;font-weight:700;color:#56f7ca;margin-bottom:9px;">‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</div>
      ${rewardHtml.join('')}
      <button class="primary-btn" style="margin-top:1.2em;" onclick="closePopup();">‡πÇ‡∏≠‡πÄ‡∏Ñ</button>
    </div>
  `, 'small', '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•');
};

// Auto bind ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π (ID: btnRedeem)
document.addEventListener('DOMContentLoaded', () => {
  let btn = document.getElementById('btnRedeem');
  if (btn) btn.onclick = window.openRedeemPopup;
});

// Expose export
window.redeemEngine = {
  open: window.openRedeemPopup,
  check: window.checkRedeemCode,
  reload: async () => { redeemCodeList = []; await loadRedeemCodeList(); }
};